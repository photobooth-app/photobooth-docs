{"openapi": "3.1.0", "info": {"title": "Photobooth App API", "description": "\nPhotobooth App \ud83d\ude80\n\nThe photobooth app is written in Python and coming along with a modern Vue frontend.\n\nFollowing api is provided by the app.\n\n## API may change any time.\n\n", "version": "0.0.1"}, "paths": {"/admin/config/schema": {"get": {"tags": ["admin", "config"], "summary": "Api Get Config Schema", "description": "Get schema to build the client UI\n:param str schema_type: default or dereferenced.", "operationId": "api_get_config_schema_admin_config_schema_get", "parameters": [{"name": "schema_type", "in": "query", "required": false, "schema": {"type": "string", "default": "default", "title": "Schema Type"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/config/reset": {"get": {"tags": ["admin", "config"], "summary": "Api Reset Config", "description": "Reset config, deleting config.json file", "operationId": "api_reset_config_admin_config_reset_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/admin/config/currentActive": {"get": {"tags": ["admin", "config"], "summary": "Api Get Config Current Active", "description": "returns currently cached and active settings", "operationId": "api_get_config_current_active_admin_config_currentActive_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/admin/config/current": {"get": {"tags": ["admin", "config"], "summary": "Api Get Config Current", "description": "read settings from drive and return", "operationId": "api_get_config_current_admin_config_current_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["admin", "config"], "summary": "Api Post Config Current", "operationId": "api_post_config_current_admin_config_current_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppConfig"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/files/list/{dir}": {"get": {"tags": ["admin", "files"], "summary": "Get List", "operationId": "get_list_admin_files_list__dir__get", "parameters": [{"name": "dir", "in": "path", "required": true, "schema": {"type": "string", "title": "Dir"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/files/file/{file}": {"get": {"tags": ["admin", "files"], "summary": "Get File", "operationId": "get_file_admin_files_file__file__get", "parameters": [{"name": "file", "in": "path", "required": true, "schema": {"type": "string", "title": "File"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/files/file/upload": {"post": {"tags": ["admin", "files"], "summary": "Create Upload File", "operationId": "create_upload_file_admin_files_file_upload_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_create_upload_file_admin_files_file_upload_post"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/files/folder/new": {"post": {"tags": ["admin", "files"], "summary": "Post Folder New", "description": "need to provide full path starting from CWD.", "operationId": "post_folder_new_admin_files_folder_new_post", "requestBody": {"content": {"application/json": {"schema": {"type": "string", "title": "New Folder Name"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/files/delete": {"post": {"tags": ["admin", "files"], "summary": "Post Delete", "operationId": "post_delete_admin_files_delete_post", "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/PathListItem"}, "type": "array", "title": "Selected Paths"}}}}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/admin/files/zip": {"post": {"tags": ["admin", "files"], "summary": "Post Zip", "operationId": "post_zip_admin_files_zip_post", "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/PathListItem"}, "type": "array", "title": "Selected Paths"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/config/ui": {"get": {"tags": ["config"], "summary": "Index", "description": "get part of the config dedicated for UI only. UI requests this on startup", "operationId": "index_config_ui_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/": {"get": {"tags": ["home"], "summary": "Index", "description": "return homepage of booth", "operationId": "index__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/aquisition/stream.mjpg": {"get": {"tags": ["aquisition"], "summary": "Video Stream", "description": "endpoint to stream live video to clients", "operationId": "video_stream_aquisition_stream_mjpg_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/aquisition/still": {"get": {"tags": ["aquisition"], "summary": "Api Still Get", "description": "Aquire image and serve to download\n\nRaises:\n    HTTPException: Image could not be aquired from backend\n\nReturns:\n    Response: Returns jpeg image to download", "operationId": "api_still_get_aquisition_still_get", "responses": {"200": {"description": "Successful Response", "content": {"image/jpeg": {}}}}}}, "/aquisition/mode/{mode}": {"get": {"tags": ["aquisition"], "summary": "Api Cmd Aquisition Capturemode Get", "description": "set backends to preview or capture mode (usually automatically switched as needed by processingservice)", "operationId": "api_cmd_aquisition_capturemode_get_aquisition_mode__mode__get", "parameters": [{"name": "mode", "in": "path", "required": true, "schema": {"type": "string", "title": "Mode"}}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/debug/log/latest": {"get": {"tags": ["logs"], "summary": "Get Log Latest", "description": "provide latest logfile to download\nTODO Handle exception if file not exists\n\nReturns:\n    _type_: _description_", "operationId": "get_log_latest_debug_log_latest_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/mediacollection/getitems": {"get": {"tags": ["mediacollection"], "summary": "Api Getitems", "operationId": "api_getitems_mediacollection_getitems_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/mediacollection/delete": {"get": {"tags": ["mediacollection"], "summary": "Api Gallery Delete", "operationId": "api_gallery_delete_mediacollection_delete_get", "parameters": [{"name": "image_id", "in": "query", "required": true, "schema": {"type": "string", "title": "Image Id"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/mediacollection/delete_all": {"get": {"tags": ["mediacollection"], "summary": "Api Gallery Delete All", "description": "Warning: deletes all files permanently without any further confirmation\n\nRaises:\n    HTTPException: _description_", "operationId": "api_gallery_delete_all_mediacollection_delete_all_get", "responses": {"204": {"description": "Successful Response"}}}}, "/mediaprocessing/preview/{mediaitem_id}/{filter}": {"get": {"tags": ["mediaprocessing"], "summary": "Api Get Preview Image Filtered", "operationId": "api_get_preview_image_filtered_mediaprocessing_preview__mediaitem_id___filter__get", "parameters": [{"name": "mediaitem_id", "in": "path", "required": true, "schema": {"title": "Mediaitem Id"}}, {"name": "filter", "in": "path", "required": true, "schema": {"title": "Filter"}}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/mediaprocessing/applyfilter/{mediaitem_id}/{filter}": {"get": {"tags": ["mediaprocessing"], "summary": "Api Get Applyfilter", "operationId": "api_get_applyfilter_mediaprocessing_applyfilter__mediaitem_id___filter__get", "parameters": [{"name": "mediaitem_id", "in": "path", "required": true, "schema": {"title": "Mediaitem Id"}}, {"name": "filter", "in": "path", "required": true, "schema": {"type": "string", "title": "Filter"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/print/latest": {"get": {"tags": ["print"], "summary": "Api Print Latest", "operationId": "api_print_latest_print_latest_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/print/item/{id}": {"get": {"tags": ["print"], "summary": "Api Print Item Id", "operationId": "api_print_item_id_print_item__id__get", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/sse": {"get": {"tags": ["home"], "summary": "Subscribe", "description": "Eventstream to feed clients with server generated events and data", "operationId": "subscribe_sse_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/system/{action}/{param}": {"get": {"tags": ["system"], "summary": "Api Cmd", "operationId": "api_cmd_system__action___param__get", "parameters": [{"name": "action", "in": "path", "required": true, "schema": {"title": "Action"}}, {"name": "param", "in": "path", "required": true, "schema": {"title": "Param"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/processing/chose/1pic": {"get": {"tags": ["processing"], "summary": "Api Chose 1Pic Get", "operationId": "api_chose_1pic_get_processing_chose_1pic_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/processing/chose/collage": {"get": {"tags": ["processing"], "summary": "Api Chose Collage Get", "operationId": "api_chose_collage_get_processing_chose_collage_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/processing/cmd/confirm": {"get": {"tags": ["processing"], "summary": "Api Cmd Confirm Get", "operationId": "api_cmd_confirm_get_processing_cmd_confirm_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/processing/cmd/reject": {"get": {"tags": ["processing"], "summary": "Api Cmd Reject Get", "operationId": "api_cmd_reject_get_processing_cmd_reject_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/processing/cmd/abort": {"get": {"tags": ["processing"], "summary": "Api Cmd Abort Get", "operationId": "api_cmd_abort_get_processing_cmd_abort_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"AppConfig": {"properties": {"common": {"allOf": [{"$ref": "#/components/schemas/GroupCommon"}], "default": {"countdown_capture_first": 2.0, "countdown_capture_second_following": 1.0, "countdown_camera_capture_offset": 0.25, "collage_automatic_capture_continue": true, "DEBUG_LEVEL": "DEBUG", "webserver_bind_ip": "0.0.0.0", "webserver_port": 8000}}, "sharing": {"allOf": [{"$ref": "#/components/schemas/GroupSharing"}], "default": {"shareservice_enabled": false, "shareservice_url": "http://explain-shareservice.photobooth-app.org/dl.php", "shareservice_apikey": "changedefault!", "shareservice_share_original": false, "share_custom_qr_url": "http://localhost/media/processed/full/{filename}"}}, "filetransfer": {"allOf": [{"$ref": "#/components/schemas/GroupFileTransfer"}], "default": {"enabled": false, "target_folder_name": "photobooth"}}, "mediaprocessing": {"allOf": [{"$ref": "#/components/schemas/GroupMediaprocessing"}], "default": {"HIRES_STILL_QUALITY": 90, "LIVEPREVIEW_QUALITY": 80, "THUMBNAIL_STILL_QUALITY": 60, "PREVIEW_STILL_QUALITY": 75, "FULL_STILL_WIDTH": 1500, "PREVIEW_STILL_WIDTH": 1200, "THUMBNAIL_STILL_WIDTH": 400, "removechromakey_enable": false, "removechromakey_keycolor": 110, "removechromakey_tolerance": 10}}, "mediaprocessing_pipeline_singleimage": {"allOf": [{"$ref": "#/components/schemas/GroupMediaprocessingPipelineSingleImage"}], "default": {"pipeline_enable": true, "filter": "original", "fill_background_enable": false, "fill_background_color": "blue", "img_background_enable": false, "img_background_file": "backgrounds/pink-7761356_1920.jpg", "img_frame_enable": true, "img_frame_file": "frames/polaroid-6125402_1pic.png", "texts_enable": true, "texts": [{"color": "black", "font": "fonts/Roboto-Bold.ttf", "font_size": 40, "pos_x": 300, "pos_y": 900, "rotate": -3, "text": "Some Text!"}]}}, "mediaprocessing_pipeline_collage": {"allOf": [{"$ref": "#/components/schemas/GroupMediaprocessingPipelineCollage"}], "default": {"capture_fill_background_enable": false, "capture_fill_background_color": "blue", "capture_img_background_enable": false, "capture_img_background_file": "backgrounds/pink-7761356_1920.jpg", "canvas_width": 1920, "canvas_height": 1080, "canvas_merge_definition": [{"filter": "earlybird", "height": 660, "pos_x": 215, "pos_y": 122, "predefined_image": "", "rotate": -2, "width": 660}, {"filter": "mayfair", "height": 660, "pos_x": 1072, "pos_y": 122, "predefined_image": "predefined_images/pexels-marcelo-miranda-7708722.jpg", "rotate": -3, "width": 660}], "canvas_fill_background_enable": false, "canvas_fill_background_color": "green", "canvas_img_background_enable": false, "canvas_img_background_file": "backgrounds/pink-7761356_1920.jpg", "canvas_img_front_enable": true, "canvas_img_front_file": "frames/polaroid-6125402_1920.png", "canvas_texts_enable": true, "canvas_texts": [{"color": "black", "font": "fonts/Roboto-Bold.ttf", "font_size": 40, "pos_x": 300, "pos_y": 800, "rotate": -3, "text": "Nice Collage Text!"}]}}, "mediaprocessing_pipeline_printing": {"allOf": [{"$ref": "#/components/schemas/GroupMediaprocessingPipelinePrint"}], "default": {}}, "uisettings": {"allOf": [{"$ref": "#/components/schemas/GroupUiSettings"}], "default": {"show_takepic_on_frontpage": true, "show_collage_on_frontpage": true, "show_gallery_on_frontpage": true, "show_admin_on_frontpage": true, "livestream_mirror_effect": true, "FRONTPAGE_TEXT": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Hey!<br>Let's take some pictures! <br>\ud83d\udcf7\ud83d\udc95</div>", "TAKEPIC_MSG_TIME": 0.5, "AUTOCLOSE_NEW_ITEM_ARRIVED": 30, "GALLERY_EMPTY_MSG": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Empty, Zero, Nada! \ud83e\udd37\u200d\u2642\ufe0f<br>Let's take some pictures! <br>\ud83d\udcf7\ud83d\udc95</div>", "gallery_show_qrcode": true, "gallery_show_filter": true, "gallery_filter_userselectable": ["original", "_1977", "aden", "ashby", "amaro", "brannan", "brooklyn", "charmes", "clarendon", "crema", "dogpatch", "earlybird", "gingham", "ginza", "hefe", "helena", "hudson", "inkwell", "juno", "kelvin", "lark", "lofi", "ludwig", "maven", "mayfair", "moon", "nashville", "perpetua", "poprocket", "reyes", "rise", "sierra", "skyline", "slumber", "stinson", "sutro", "toaster", "valencia", "walden", "willow", "xpro2"], "gallery_show_download": true, "gallery_show_delete": true, "gallery_show_print": true}}, "backends": {"allOf": [{"$ref": "#/components/schemas/GroupBackends"}], "default": {"MAIN_BACKEND": "VirtualCamera", "LIVE_BACKEND": "Disabled", "LIVEPREVIEW_ENABLED": true, "LIVEPREVIEW_FRAMERATE": 15, "retry_capture": 3, "gphoto2_iso_liveview": "", "gphoto2_iso_capture": "", "gphoto2_shutter_speed_liveview": "", "gphoto2_shutter_speed_capture": "", "cv2_CAM_RESOLUTION_WIDTH": 10000, "cv2_CAM_RESOLUTION_HEIGHT": 10000, "cv2_device_index": 0, "cv2_CAMERA_TRANSFORM_HFLIP": false, "cv2_CAMERA_TRANSFORM_VFLIP": false, "v4l_CAM_RESOLUTION_WIDTH": 10000, "v4l_CAM_RESOLUTION_HEIGHT": 10000, "v4l_device_index": 0, "gphoto2_disable_viewfinder_before_capture": true, "gphoto2_wait_event_after_capture_trigger": false, "picamera2_CAPTURE_CAM_RESOLUTION_WIDTH": 1280, "picamera2_CAPTURE_CAM_RESOLUTION_HEIGHT": 720, "picamera2_PREVIEW_CAM_RESOLUTION_WIDTH": 1280, "picamera2_PREVIEW_CAM_RESOLUTION_HEIGHT": 720, "picamera2_LIVEVIEW_RESOLUTION_WIDTH": 1280, "picamera2_LIVEVIEW_RESOLUTION_HEIGHT": 720, "picamera2_CAMERA_TRANSFORM_HFLIP": false, "picamera2_CAMERA_TRANSFORM_VFLIP": false, "picamera2_AE_EXPOSURE_MODE": 1, "picamera2_stream_quality": "medium"}}, "hardwareinputoutput": {"allOf": [{"$ref": "#/components/schemas/GroupHardwareInputOutput"}], "default": {"keyboard_input_enabled": false, "keyboard_input_keycode_takepic": "i", "keyboard_input_keycode_takecollage": "c", "keyboard_input_keycode_print_recent_item": "p", "wled_enabled": false, "wled_serial_port": "", "gpio_enabled": false, "gpio_pin_shutdown": 17, "gpio_pin_reboot": 18, "gpio_pin_take1pic": 27, "gpio_pin_collage": 22, "gpio_pin_print_recent_item": 23, "printing_enabled": false, "printing_command": "mspaint /p {filename}", "printing_blocked_time": 20}}, "misc": {"allOf": [{"$ref": "#/components/schemas/GroupMisc"}], "default": {}}}, "type": "object", "title": "AppConfig", "description": "AppConfig class glueing all together\n\nIn the case where a value is specified for the same Settings field in multiple ways, the selected value is determined as follows (in descending order of priority):\n\n1 Arguments passed to the Settings class initialiser.\n2 Environment variables, e.g. my_prefix_special_function as described above.\n3 Variables loaded from a dotenv (.env) file.\n4 Variables loaded from the secrets directory.\n5 The default field values for the Settings model."}, "Body_create_upload_file_admin_files_file_upload_post": {"properties": {"upload_target_folder": {"type": "string", "title": "Upload Target Folder"}, "uploaded_files": {"items": {"type": "string", "format": "binary"}, "type": "array", "title": "Uploaded Files"}}, "type": "object", "required": ["upload_target_folder", "uploaded_files"], "title": "Body_create_upload_file_admin_files_file_upload_post"}, "CollageMergeDefinition": {"properties": {"pos_x": {"type": "integer", "minimum": 0.0, "title": "Pos X", "default": 50}, "pos_y": {"type": "integer", "minimum": 0.0, "title": "Pos Y", "default": 50}, "width": {"type": "integer", "minimum": 0.0, "title": "Width", "default": 600}, "height": {"type": "integer", "minimum": 0.0, "title": "Height", "default": 600}, "rotate": {"type": "integer", "title": "Rotate", "default": 0}, "predefined_image": {"type": "string", "title": "Predefined Image", "default": ""}, "filter": {"allOf": [{"$ref": "#/components/schemas/EnumPilgramFilter"}], "default": "original"}}, "type": "object", "title": "CollageMergeDefinition"}, "EnumDebugLevel": {"type": "string", "enum": ["DEBUG", "INFO", "WARNING", "ERROR"], "title": "EnumDebugLevel", "description": "enum for debuglevel"}, "EnumImageBackendsLive": {"type": "string", "enum": ["Disabled", "VirtualCamera", "Picamera2", "WebcamCv2", "WebcamV4l"], "title": "EnumImageBackendsLive", "description": "enum to choose image backend LIVE from"}, "EnumImageBackendsMain": {"type": "string", "enum": ["VirtualCamera", "Picamera2", "WebcamCv2", "WebcamV4l", "Gphoto2", "Digicamcontrol"], "title": "EnumImageBackendsMain", "description": "enum to choose image backend MAIN from"}, "EnumPicamStreamQuality": {"type": "string", "enum": ["very low", "low", "medium", "high", "very high"], "title": "EnumPicamStreamQuality", "description": "Enum type to describe the quality wanted from an encoder.\nThis may be passed if a specific value (such as bitrate) has not been set."}, "EnumPilgramFilter": {"type": "string", "enum": ["original", "_1977", "aden", "ashby", "amaro", "brannan", "brooklyn", "charmes", "clarendon", "crema", "dogpatch", "earlybird", "gingham", "ginza", "hefe", "helena", "hudson", "inkwell", "juno", "kelvin", "lark", "lofi", "ludwig", "maven", "mayfair", "moon", "nashville", "perpetua", "poprocket", "reyes", "rise", "sierra", "skyline", "slumber", "stinson", "sutro", "toaster", "valencia", "walden", "willow", "xpro2"], "title": "EnumPilgramFilter", "description": "enum to choose image filter from, pilgram filter"}, "GroupBackends": {"properties": {"MAIN_BACKEND": {"allOf": [{"$ref": "#/components/schemas/EnumImageBackendsMain"}], "title": "Main Backend", "description": "Main backend to use for high quality still captures. Also used for livepreview if backend is capable of.", "default": "VirtualCamera"}, "LIVE_BACKEND": {"allOf": [{"$ref": "#/components/schemas/EnumImageBackendsLive"}], "title": "Live Backend", "description": "Secondary backend used for live streaming only. Useful to stream from webcam if DSLR camera has no livestream capability.", "default": "Disabled"}, "LIVEPREVIEW_ENABLED": {"type": "boolean", "title": "Livepreview Enabled", "description": "Enable livestream (if possible)", "default": true}, "LIVEPREVIEW_FRAMERATE": {"type": "integer", "maximum": 30.0, "minimum": 5.0, "title": "Livepreview Framerate", "description": "Reduce the framerate to save cpu/gpu on device displaying the live preview", "default": 15, "ui_component": "QSlider"}, "retry_capture": {"type": "integer", "maximum": 5.0, "minimum": 1.0, "title": "Retry Capture", "description": "Number of attempts to gather a picture from backend.", "default": 3}, "gphoto2_iso_liveview": {"type": "string", "title": "Gphoto2 Iso Liveview", "description": "Sets the ISO for when the photobooth is in live preview modus. Very useful, when Camera does not support Exposure Simulation, and an external Flash is used. Only works when the camera is in manual. (Example Values: Auto, 100, 200, ...)", "default": ""}, "gphoto2_iso_capture": {"type": "string", "title": "Gphoto2 Iso Capture", "description": "Sets the ISO for when the photobooth captures a photo. Very useful, when Camera does not support Exposure Simulation, and an external Flash is used. Only works when the camera is in manual. (Example Values: Auto, 100, 200, ...)", "default": ""}, "gphoto2_shutter_speed_liveview": {"type": "string", "title": "Gphoto2 Shutter Speed Liveview", "description": "Sets the shutter speed for the camera during the photobooth's live preview mode. Very useful, when Camera does not support Exposure Simulation, and an external Flash is used. This setting is effective only when the camera is in manual mode. (Example Values: 1, 1/5, 1/20, 1/30, 1/60, 1/1000, 1/4000, ...) Choose a very high default shutter speed in combination with Auto iso to emulate auto exposure. ", "default": ""}, "gphoto2_shutter_speed_capture": {"type": "string", "title": "Gphoto2 Shutter Speed Capture", "description": "Configures the shutter speed for the camera at the time of capturing a photo in the photobooth. Very useful, when Camera does not support Exposure Simulation, and an external Flash is used. Operational only in manual mode. (Example Values: 1/60, 1/320, 1/1000, 1/2000, 1/4000, ...)", "default": ""}, "cv2_CAM_RESOLUTION_WIDTH": {"type": "integer", "title": "Cv2 Cam Resolution Width", "description": "still photo camera resolution width to opencv2 backend", "default": 10000}, "cv2_CAM_RESOLUTION_HEIGHT": {"type": "integer", "title": "Cv2 Cam Resolution Height", "description": "still photo camera resolution height to opencv2 backend", "default": 10000}, "cv2_device_index": {"type": "integer", "title": "Cv2 Device Index", "description": "Device index of webcam opened in cv2 backend", "default": 0}, "cv2_CAMERA_TRANSFORM_HFLIP": {"type": "boolean", "title": "Cv2 Camera Transform Hflip", "description": "Apply horizontal flip to image source to opencv2 backend", "default": false}, "cv2_CAMERA_TRANSFORM_VFLIP": {"type": "boolean", "title": "Cv2 Camera Transform Vflip", "description": "Apply vertical flip to image source to opencv2 backend", "default": false}, "v4l_CAM_RESOLUTION_WIDTH": {"type": "integer", "title": "V4L Cam Resolution Width", "description": "still photo camera resolution width on supported backends", "default": 10000}, "v4l_CAM_RESOLUTION_HEIGHT": {"type": "integer", "title": "V4L Cam Resolution Height", "description": "still photo camera resolution height on supported backends", "default": 10000}, "v4l_device_index": {"type": "integer", "title": "V4L Device Index", "description": "Device index of webcam opened in v4l backend", "default": 0}, "gphoto2_disable_viewfinder_before_capture": {"type": "boolean", "title": "Gphoto2 Disable Viewfinder Before Capture", "description": "Disable viewfinder before capture might speed up following capture autofocus. Might not work with every camera.", "default": true}, "gphoto2_wait_event_after_capture_trigger": {"type": "boolean", "title": "Gphoto2 Wait Event After Capture Trigger", "description": "Usually wait_for_event not necessary before downloading the file from camera. Adjust if necessary.", "default": false}, "picamera2_CAPTURE_CAM_RESOLUTION_WIDTH": {"type": "integer", "title": "Picamera2 Capture Cam Resolution Width", "description": "camera resolution width to capture high resolution photo", "default": 1280}, "picamera2_CAPTURE_CAM_RESOLUTION_HEIGHT": {"type": "integer", "title": "Picamera2 Capture Cam Resolution Height", "description": "camera resolution height to capture high resolution photo", "default": 720}, "picamera2_PREVIEW_CAM_RESOLUTION_WIDTH": {"type": "integer", "maximum": 3500.0, "minimum": 500.0, "title": "Picamera2 Preview Cam Resolution Width", "description": "camera resolution width to capture live video", "default": 1280}, "picamera2_PREVIEW_CAM_RESOLUTION_HEIGHT": {"type": "integer", "maximum": 2500.0, "minimum": 500.0, "title": "Picamera2 Preview Cam Resolution Height", "description": "camera resolution height to capture live video", "default": 720}, "picamera2_LIVEVIEW_RESOLUTION_WIDTH": {"type": "integer", "maximum": 3500.0, "minimum": 500.0, "title": "Picamera2 Liveview Resolution Width", "description": "actual resolution width for liveview stream", "default": 1280}, "picamera2_LIVEVIEW_RESOLUTION_HEIGHT": {"type": "integer", "maximum": 2500.0, "minimum": 500.0, "title": "Picamera2 Liveview Resolution Height", "description": "actual resolution height for liveview stream", "default": 720}, "picamera2_CAMERA_TRANSFORM_HFLIP": {"type": "boolean", "title": "Picamera2 Camera Transform Hflip", "description": "Apply horizontal flip to image source to picamera2 backend", "default": false}, "picamera2_CAMERA_TRANSFORM_VFLIP": {"type": "boolean", "title": "Picamera2 Camera Transform Vflip", "description": "Apply vertical flip to image source to picamera2 backend", "default": false}, "picamera2_AE_EXPOSURE_MODE": {"type": "integer", "maximum": 4.0, "minimum": 0.0, "title": "Picamera2 Ae Exposure Mode", "description": "Usually 0=normal exposure, 1=short, 2=long, 3=custom. Not all necessarily supported by camera!", "default": 1}, "picamera2_stream_quality": {"allOf": [{"$ref": "#/components/schemas/EnumPicamStreamQuality"}], "title": "Picamera2 Stream Quality (for livepreview)", "description": "Lower quality results in less data to be transferred and may reduce load on display device.", "default": "medium"}}, "type": "object", "title": "Camera Backend Config", "description": "Choose backends for still images/high quality images captured on main backend.\nIf the livepreview is enabled, the video is captured from live backend (if configured)\nor main backend."}, "GroupCommon": {"properties": {"countdown_capture_first": {"type": "number", "maximum": 20.0, "minimum": 0.0, "title": "Countdown Capture First", "description": "Countdown in seconds, started when user start a capture process", "default": 2.0}, "countdown_capture_second_following": {"type": "number", "maximum": 20.0, "minimum": 0.0, "title": "Countdown Capture Second Following", "description": "Countdown in seconds, used for second and following captures for collages", "default": 1.0}, "countdown_camera_capture_offset": {"type": "number", "maximum": 20.0, "minimum": 0.0, "title": "Countdown Camera Capture Offset", "description": "Trigger camera capture by offset earlier (in seconds). 0 trigger exactly when countdown is 0. Use to compensate for delay in camera processing for better UX.", "default": 0.25}, "collage_automatic_capture_continue": {"type": "boolean", "title": "Collage Automatic Capture Continue", "description": "Automatically continue with second and following images to capture for collage. No user interaction in between.", "default": true}, "DEBUG_LEVEL": {"allOf": [{"$ref": "#/components/schemas/EnumDebugLevel"}], "title": "Debug Level", "description": "Log verbosity. File is writte to disc, and latest log is displayed also in UI.", "default": "DEBUG"}, "webserver_bind_ip": {"type": "string", "title": "Webserver Bind Ip", "description": "IP/Hostname to bind the webserver to. 0.0.0.0 means bind to all IP adresses of host.", "default": "0.0.0.0"}, "webserver_port": {"type": "integer", "title": "Webserver Port", "description": "Port to serve the photobooth website. Ensure the port is available. Ports below 1024 need root!", "default": 8000}}, "type": "object", "title": "Common Config", "description": "Common config for photobooth."}, "GroupFileTransfer": {"properties": {"enabled": {"type": "boolean", "title": "Enabled", "description": "Enable the automatic file transfer to USB service. Files are copied when the USB drive is inserted.", "default": false}, "target_folder_name": {"type": "string", "title": "Target Folder Name", "description": "Name of the top-level folder on the USB drive where files will be copied to.", "default": "photobooth"}}, "type": "object", "title": "USB File Transfer Service Config", "description": "Configuration for USB File Transfer Service."}, "GroupHardwareInputOutput": {"properties": {"keyboard_input_enabled": {"type": "boolean", "title": "Keyboard Input Enabled", "description": "Enable keyboard input globally", "default": false}, "keyboard_input_keycode_takepic": {"type": "string", "title": "Keyboard Input Keycode Takepic", "description": "Keycode triggers capture of one image", "default": "i"}, "keyboard_input_keycode_takecollage": {"type": "string", "title": "Keyboard Input Keycode Takecollage", "description": "Keycode triggers capture of collage", "default": "c"}, "keyboard_input_keycode_print_recent_item": {"type": "string", "title": "Keyboard Input Keycode Print Recent Item", "description": "Keycode triggers printing most recent image captured", "default": "p"}, "wled_enabled": {"type": "boolean", "title": "Wled Enabled", "description": "Enable WLED integration for user feedback during countdown and capture by LEDs.", "default": false}, "wled_serial_port": {"type": "string", "title": "Wled Serial Port", "description": "Serial port the WLED device is connected to.", "default": ""}, "gpio_enabled": {"type": "boolean", "title": "Gpio Enabled", "description": "Enable Raspberry Pi GPIOzero integration.", "default": false}, "gpio_pin_shutdown": {"type": "integer", "title": "Gpio Pin Shutdown", "description": "GPIO pin to shutdown after holding it for 2 seconds.", "default": 17}, "gpio_pin_reboot": {"type": "integer", "title": "Gpio Pin Reboot", "description": "GPIO pin to reboot after holding it for 2 seconds.", "default": 18}, "gpio_pin_take1pic": {"type": "integer", "title": "Gpio Pin Take1Pic", "description": "GPIO pin to take one picture.", "default": 27}, "gpio_pin_collage": {"type": "integer", "title": "Gpio Pin Collage", "description": "GPIO pin to take a collage.", "default": 22}, "gpio_pin_print_recent_item": {"type": "integer", "title": "Gpio Pin Print Recent Item", "description": "GPIO pin to print last captured item.", "default": 23}, "printing_enabled": {"type": "boolean", "title": "Printing Enabled", "description": "Enable printing in general.", "default": false}, "printing_command": {"type": "string", "title": "Printing Command", "description": "Command issued to print. Use {filename} as placeholder for the JPEG image to be printed.", "default": "mspaint /p {filename}"}, "printing_blocked_time": {"type": "integer", "title": "Printing Blocked Time", "description": "Block queue print until time is passed. Time in seconds.", "default": 20}}, "type": "object", "title": "Hardware Input/Output Config", "description": "Configure hardware GPIO, keyboard and more. Find integration information in the documentation."}, "GroupMediaprocessing": {"properties": {"HIRES_STILL_QUALITY": {"type": "integer", "maximum": 100.0, "minimum": 10.0, "title": "Hires Still Quality", "description": "Still JPEG full resolution quality, applied to download images and images with filter", "default": 90, "ui_component": "QSlider"}, "LIVEPREVIEW_QUALITY": {"type": "integer", "maximum": 100.0, "minimum": 10.0, "title": "Livepreview Quality", "description": "Livepreview stream JPEG image quality on supported backends", "default": 80, "ui_component": "QSlider"}, "THUMBNAIL_STILL_QUALITY": {"type": "integer", "maximum": 100.0, "minimum": 10.0, "title": "Thumbnail Still Quality", "description": "Still JPEG thumbnail quality, thumbs used in gallery list", "default": 60, "ui_component": "QSlider"}, "PREVIEW_STILL_QUALITY": {"type": "integer", "maximum": 100.0, "minimum": 10.0, "title": "Preview Still Quality", "description": "Still JPEG preview quality, preview still shown in gallery detail", "default": 75, "ui_component": "QSlider"}, "FULL_STILL_WIDTH": {"type": "integer", "maximum": 5000.0, "minimum": 800.0, "title": "Full Still Width", "description": "Width of resized full image with filters applied. For performance choose as low as possible but still gives decent print quality. Example: 1500/6inch=250dpi", "default": 1500}, "PREVIEW_STILL_WIDTH": {"type": "integer", "maximum": 2500.0, "minimum": 200.0, "title": "Preview Still Width", "description": "Width of resized preview image, height is automatically calculated to keep aspect ratio", "default": 1200}, "THUMBNAIL_STILL_WIDTH": {"type": "integer", "maximum": 1000.0, "minimum": 100.0, "title": "Thumbnail Still Width", "description": "Width of resized thumbnail image, height is automatically calculated to keep aspect ratio", "default": 400}, "removechromakey_enable": {"type": "boolean", "title": "Removechromakey Enable", "description": "Apply chromakey greenscreen removal from captured images", "default": false}, "removechromakey_keycolor": {"type": "integer", "maximum": 360.0, "minimum": 0.0, "title": "Removechromakey Keycolor", "description": "Color (H) in HSV colorspace to remove on 360\u00b0 scale.", "default": 110}, "removechromakey_tolerance": {"type": "integer", "maximum": 50.0, "minimum": 1.0, "title": "Removechromakey Tolerance", "description": "Tolerance for color (H) on chromakey color removal.", "default": 10}}, "type": "object", "title": "Process media after capture", "description": "Configure stages how to process images after capture."}, "GroupMediaprocessingPipelineCollage": {"properties": {"capture_fill_background_enable": {"type": "boolean", "title": "Capture Fill Background Enable", "description": "Apply solid color background to captured image (useful only if image is extended or background removed)", "default": false}, "capture_fill_background_color": {"type": "string", "format": "color", "title": "Capture Fill Background Color", "description": "Solid color used to fill background.", "default": "blue"}, "capture_img_background_enable": {"type": "boolean", "title": "Capture Img Background Enable", "description": "Add image from file to background (useful only if image is extended or background removed)", "default": false}, "capture_img_background_file": {"type": "string", "title": "Capture Img Background File", "description": "Image file to use as background filling transparent area. File needs to be located in DATA_DIR/*", "default": "backgrounds/pink-7761356_1920.jpg"}, "canvas_width": {"type": "integer", "title": "Canvas Width", "description": "Width (X) in pixel of collage image. The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 1920}, "canvas_height": {"type": "integer", "title": "Canvas Height", "description": "Height (Y) in pixel of collage image. The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 1080}, "canvas_merge_definition": {"items": {"$ref": "#/components/schemas/CollageMergeDefinition"}, "type": "array", "title": "Canvas Merge Definition", "description": "How to arrange single images in the collage. Pos_x/Pos_y measure in pixel starting 0/0 at top-left in image. Width/Height in pixels. Aspect ratio is kept always. Predefined image files are used instead a camera capture. File needs to be located in DATA_DIR/*", "default": [{"pos_x": 215, "pos_y": 122, "width": 660, "height": 660, "rotate": -2, "predefined_image": "", "filter": "earlybird"}, {"pos_x": 1072, "pos_y": 122, "width": 660, "height": 660, "rotate": -3, "predefined_image": "predefined_images/pexels-marcelo-miranda-7708722.jpg", "filter": "mayfair"}]}, "canvas_fill_background_enable": {"type": "boolean", "title": "Canvas Fill Background Enable", "description": "Apply solid color background to collage", "default": false}, "canvas_fill_background_color": {"type": "string", "format": "color", "title": "Canvas Fill Background Color", "description": "Solid color used to fill background.", "default": "green"}, "canvas_img_background_enable": {"type": "boolean", "title": "Canvas Img Background Enable", "description": "Add image from file to background.", "default": false}, "canvas_img_background_file": {"type": "string", "title": "Canvas Img Background File", "description": "Image file to use as background filling transparent area. File needs to be located in userdata/*", "default": "backgrounds/pink-7761356_1920.jpg"}, "canvas_img_front_enable": {"type": "boolean", "title": "Canvas Img Front Enable", "description": "Overlay image on canvas image.", "default": true}, "canvas_img_front_file": {"type": "string", "title": "Canvas Img Front File", "description": "Image file to paste on top over photos and backgrounds. Photos are visible only through transparant parts. Image needs to be transparent (PNG). File needs to be located in DATA_DIR/*", "default": "frames/polaroid-6125402_1920.png"}, "canvas_texts_enable": {"type": "boolean", "title": "Canvas Texts Enable", "description": "General enable apply texts below.", "default": true}, "canvas_texts": {"items": {"$ref": "#/components/schemas/TextsConfig"}, "type": "array", "title": "Canvas Texts", "description": "Text to overlay on final collage. Pos_x/Pos_y measure in pixel starting 0/0 at top-left in image. Font to use in text stages. File needs to be located in DATA_DIR/*", "default": [{"text": "Nice Collage Text!", "pos_x": 300, "pos_y": 800, "rotate": -3, "font_size": 40, "font": "fonts/Roboto-Bold.ttf", "color": "black"}]}}, "type": "object", "title": "Process collage after capture", "description": "Configure stages how to process collage after capture."}, "GroupMediaprocessingPipelinePrint": {"properties": {}, "type": "object", "title": "Process mediaitem before printing on paper", "description": "Configure stages how to process mediaitem before printing on paper."}, "GroupMediaprocessingPipelineSingleImage": {"properties": {"pipeline_enable": {"type": "boolean", "title": "Pipeline Enable", "description": "Enable/Disable processing pipeline completely", "default": true}, "filter": {"allOf": [{"$ref": "#/components/schemas/EnumPilgramFilter"}], "title": "Pic1 Filter", "description": "Instagram-like filter to apply per default. 'original' applies no filter.", "default": "original"}, "fill_background_enable": {"type": "boolean", "title": "Fill Background Enable", "description": "Apply solid color background to captured image (useful only if image is extended or background removed)", "default": false}, "fill_background_color": {"type": "string", "format": "color", "title": "Fill Background Color", "description": "Solid color used to fill background.", "default": "blue"}, "img_background_enable": {"type": "boolean", "title": "Img Background Enable", "description": "Add image from file to background (useful only if image is extended or background removed)", "default": false}, "img_background_file": {"type": "string", "title": "Img Background File", "description": "Image file to use as background filling transparent area. File needs to be located in DATA_DIR/*", "default": "backgrounds/pink-7761356_1920.jpg"}, "img_frame_enable": {"type": "boolean", "title": "Img Frame Enable", "description": "Mount captured image to frame.", "default": true}, "img_frame_file": {"type": "string", "title": "Img Frame File", "description": "Image file to which the captured image is mounted to. Frame determines the output image size! Photos are visible through transparant parts. Image needs to be transparent (PNG). File needs to be located in userdata/*", "default": "frames/polaroid-6125402_1pic.png"}, "texts_enable": {"type": "boolean", "title": "Texts Enable", "description": "General enable apply texts below.", "default": true}, "texts": {"items": {"$ref": "#/components/schemas/TextsConfig"}, "type": "array", "title": "Texts", "description": "Text to overlay on images after capture. Pos_x/Pos_y measure in pixel starting 0/0 at top-left in image. Font to use in text stages. File needs to be located in DATA_DIR/*", "default": [{"text": "Some Text!", "pos_x": 300, "pos_y": 900, "rotate": -3, "font_size": 40, "font": "fonts/Roboto-Bold.ttf", "color": "black"}]}}, "type": "object", "title": "Postprocess single captures", "description": "Configure stages how to process images after capture."}, "GroupMisc": {"properties": {}, "type": "object", "title": "Miscellaneous Config", "description": "Quite advanced, usually not necessary to touch."}, "GroupSharing": {"properties": {"shareservice_enabled": {"type": "boolean", "title": "Shareservice Enabled", "description": "Enable share service. To enable URL needs to be configured and dl.php script setup properly.", "default": false}, "shareservice_url": {"type": "string", "title": "Shareservice Url", "description": "URL of php script that is used to serve files and share via QR code.", "default": "http://explain-shareservice.photobooth-app.org/dl.php"}, "shareservice_apikey": {"type": "string", "title": "Shareservice Apikey", "description": "Key to secure the download php script. Set the key in dl.php script to same value. Only if correct key is provided the shareservice works properly.", "default": "changedefault!"}, "shareservice_share_original": {"type": "boolean", "title": "Shareservice Share Original", "description": "Upload original image as received from camera. If unchecked, the full processed version is uploaded with filter and texts applied.", "default": false}, "share_custom_qr_url": {"type": "string", "title": "Share Custom Qr Url", "description": "URL displayed as QR code to image for download. Need you to sync the files on your own or allow the user to access via hotspot. {filename} is replaced by actual filename in QR code.", "default": "http://localhost/media/processed/full/{filename}"}}, "type": "object", "title": "\ud83e\udef6 Share Config", "description": "Settings about shareing media"}, "GroupUiSettings": {"properties": {"show_takepic_on_frontpage": {"type": "boolean", "title": "Show Takepic On Frontpage", "description": "Show link to capture single picture on frontpage.", "default": true}, "show_collage_on_frontpage": {"type": "boolean", "title": "Show Collage On Frontpage", "description": "Show link to capture collage on frontpage.", "default": true}, "show_gallery_on_frontpage": {"type": "boolean", "title": "Show Gallery On Frontpage", "description": "Show link to gallery on frontpage.", "default": true}, "show_admin_on_frontpage": {"type": "boolean", "title": "Show Admin On Frontpage", "description": "Show link to admin center, usually only during setup.", "default": true}, "livestream_mirror_effect": {"type": "boolean", "title": "Livestream Mirror Effect", "description": "Flip livestream horizontally to create a mirror effect feeling more natural to users.", "default": true}, "FRONTPAGE_TEXT": {"type": "string", "title": "Frontpage Text", "description": "Text/HTML displayed on frontpage.", "default": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Hey!<br>Let's take some pictures! <br>\ud83d\udcf7\ud83d\udc95</div>"}, "TAKEPIC_MSG_TIME": {"type": "number", "title": "Takepic Msg Time", "description": "Offset in seconds, the smile-icon shall be shown.", "default": 0.5}, "AUTOCLOSE_NEW_ITEM_ARRIVED": {"type": "integer", "title": "Autoclose New Item Arrived", "description": "Timeout in seconds a new item popup closes automatically.", "default": 30}, "GALLERY_EMPTY_MSG": {"type": "string", "title": "Gallery Empty Msg", "description": "Message displayed if gallery is empty.", "default": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Empty, Zero, Nada! \ud83e\udd37\u200d\u2642\ufe0f<br>Let's take some pictures! <br>\ud83d\udcf7\ud83d\udc95</div>"}, "gallery_show_qrcode": {"type": "boolean", "title": "Gallery Show Qrcode", "description": "Show QR code in gallery. If shareservice is enabled the URL is automatically generated, if not go to share config and provide URL.", "default": true}, "gallery_show_filter": {"type": "boolean", "title": "Gallery Show Filter", "description": "Show instagramlike filter (pilgram2).", "default": true}, "gallery_filter_userselectable": {"items": {"$ref": "#/components/schemas/EnumPilgramFilter"}, "type": "array", "title": "Pic1 Filter Userselectable", "description": "Filter the user may choose from in the gallery. 'original' applies no filter.", "default": ["original", "_1977", "aden", "ashby", "amaro", "brannan", "brooklyn", "charmes", "clarendon", "crema", "dogpatch", "earlybird", "gingham", "ginza", "hefe", "helena", "hudson", "inkwell", "juno", "kelvin", "lark", "lofi", "ludwig", "maven", "mayfair", "moon", "nashville", "perpetua", "poprocket", "reyes", "rise", "sierra", "skyline", "slumber", "stinson", "sutro", "toaster", "valencia", "walden", "willow", "xpro2"]}, "gallery_show_download": {"type": "boolean", "title": "Gallery Show Download", "description": "Show download button in gallery.", "default": true}, "gallery_show_delete": {"type": "boolean", "title": "Gallery Show Delete", "description": "Show delete button for items in gallery.", "default": true}, "gallery_show_print": {"type": "boolean", "title": "Gallery Show Print", "description": "Show print button for items in gallery.", "default": true}}, "type": "object", "title": "Personalize the User Interface", "description": "Personalize the booth's UI."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "PathListItem": {"properties": {"name": {"type": "string", "title": "Name"}, "filepath": {"type": "string", "title": "Filepath"}, "is_dir": {"type": "boolean", "title": "Is Dir"}, "size": {"type": "integer", "title": "Size"}}, "type": "object", "required": ["name", "filepath", "is_dir", "size"], "title": "PathListItem"}, "TextsConfig": {"properties": {"text": {"type": "string", "title": "Text", "default": ""}, "pos_x": {"type": "integer", "minimum": 0.0, "title": "Pos X", "default": 50}, "pos_y": {"type": "integer", "minimum": 0.0, "title": "Pos Y", "default": 50}, "rotate": {"type": "integer", "title": "Rotate", "default": 0}, "font_size": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Font Size", "default": 40}, "font": {"type": "string", "title": "Font", "default": "fonts/Roboto-Bold.ttf"}, "color": {"type": "string", "format": "color", "title": "Color", "default": "red"}}, "type": "object", "title": "TextsConfig"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}