{"openapi": "3.0.2", "info": {"title": "Photobooth App API", "description": "\nPhotobooth App \ud83d\ude80\n\nThe photobooth app is written in Python and coming along with a modern Vue frontend.\n\nFollowing api is provided by the app.\n\n## Work in progress, API may change any time.\n\n", "version": "0.0.1"}, "paths": {"/config/ui": {"get": {"tags": ["config"], "summary": "Index", "description": "get part of the config dedicated for UI only. UI requests this on startup", "operationId": "index_config_ui_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/config/schema": {"get": {"tags": ["config"], "summary": "Api Get Config Schema", "description": "Get schema to build the client UI\n:param str schema_type: default or dereferenced.", "operationId": "api_get_config_schema_config_schema_get", "parameters": [{"required": false, "schema": {"title": "Schema Type", "type": "string", "default": "default"}, "name": "schema_type", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/config/reset": {"get": {"tags": ["config"], "summary": "Api Reset Config", "description": "Reset config, deleting config.json file", "operationId": "api_reset_config_config_reset_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/config/currentActive": {"get": {"tags": ["config"], "summary": "Api Get Config Current Active", "description": "returns currently cached and active settings", "operationId": "api_get_config_current_active_config_currentActive_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/config/current": {"get": {"tags": ["config"], "summary": "Api Get Config Current", "description": "read settings from drive and return", "operationId": "api_get_config_current_config_current_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["config"], "summary": "Api Post Config Current", "operationId": "api_post_config_current_config_current_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppConfig"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/": {"get": {"tags": ["home"], "summary": "Index", "description": "return homepage of booth", "operationId": "index__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/aquisition/stream.mjpg": {"get": {"tags": ["aquisition"], "summary": "Video Stream", "description": "endpoint to stream live video to clients", "operationId": "video_stream_aquisition_stream_mjpg_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/aquisition/still": {"get": {"tags": ["aquisition"], "summary": "Api Still Get", "description": "Aquire image and serve to download\n\nRaises:\n    HTTPException: Image could not be aquired from backend\n\nReturns:\n    Response: Returns jpeg image to download", "operationId": "api_still_get_aquisition_still_get", "responses": {"200": {"description": "Successful Response", "content": {"image/jpeg": {}}}}}}, "/aquisition/mode/{mode}": {"get": {"tags": ["aquisition"], "summary": "Api Cmd Aquisition Capturemode Get", "description": "_summary_\n\nArgs:\n    wled_control (bool, optional): Also control wled module. Request WLED module preset thrill. Defaults to True.", "operationId": "api_cmd_aquisition_capturemode_get_aquisition_mode__mode__get", "parameters": [{"required": true, "schema": {"title": "Mode", "type": "string"}, "name": "mode", "in": "path"}, {"required": false, "schema": {"title": "Wled Control", "type": "boolean", "default": true}, "name": "wled_control", "in": "query"}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/log/latest": {"get": {"tags": ["logs"], "summary": "Get Latest Log", "description": "provide latest logfile to download\nTODO Handle exception if file not exists\n\nReturns:\n    _type_: _description_", "operationId": "get_latest_log_log_latest_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/mediacollection/getitems": {"get": {"tags": ["mediacollection"], "summary": "Api Getitems", "operationId": "api_getitems_mediacollection_getitems_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/mediacollection/delete": {"get": {"tags": ["mediacollection"], "summary": "Api Gallery Delete", "operationId": "api_gallery_delete_mediacollection_delete_get", "parameters": [{"required": true, "schema": {"title": "Image Id", "type": "string"}, "name": "image_id", "in": "query"}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/mediacollection/delete_all": {"get": {"tags": ["mediacollection"], "summary": "Api Gallery Delete All", "description": "Warning: deletes all files permanently without any further confirmation\n\nRaises:\n    HTTPException: _description_", "operationId": "api_gallery_delete_all_mediacollection_delete_all_get", "responses": {"204": {"description": "Successful Response"}}}}, "/sse": {"get": {"tags": ["home"], "summary": "Subscribe", "description": "Eventstream to feed clients with server generated events and data", "operationId": "subscribe_sse_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/system/{action}/{param}": {"get": {"tags": ["system"], "summary": "Api Cmd", "operationId": "api_cmd_system__action___param__get", "parameters": [{"required": true, "schema": {"title": "Action"}, "name": "action", "in": "path"}, {"required": true, "schema": {"title": "Param"}, "name": "param", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/processing/chose/1pic": {"get": {"tags": ["processing"], "summary": "Api Chose 1Pic Get", "operationId": "api_chose_1pic_get_processing_chose_1pic_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/processing/cmd/capture": {"get": {"tags": ["processing"], "summary": "Api Chose 1Pic Get", "operationId": "api_chose_1pic_get_processing_cmd_capture_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"AppConfig": {"title": "AppConfig", "type": "object", "properties": {"common": {"title": "Common", "allOf": [{"$ref": "#/components/schemas/GroupCommon"}], "default": {"CAPTURE_CAM_RESOLUTION_WIDTH": 1280, "CAPTURE_CAM_RESOLUTION_HEIGHT": 720, "PREVIEW_CAM_RESOLUTION_WIDTH": 1280, "PREVIEW_CAM_RESOLUTION_HEIGHT": 720, "LIVEVIEW_RESOLUTION_WIDTH": 1280, "LIVEVIEW_RESOLUTION_HEIGHT": 720, "LIVEPREVIEW_QUALITY": 80, "THUMBNAIL_STILL_QUALITY": 60, "PREVIEW_STILL_QUALITY": 75, "HIRES_STILL_QUALITY": 90, "PREVIEW_STILL_WIDTH": 900, "THUMBNAIL_STILL_WIDTH": 400, "DEBUG_LEVEL": "DEBUG", "LIVEPREVIEW_FRAMERATE": 15, "EXT_DOWNLOAD_URL": "http://dl.qbooth.net/{filename}", "CAMERA_TRANSFORM_HFLIP": false, "CAMERA_TRANSFORM_VFLIP": false, "PROCESS_COUNTDOWN_TIMER": 3, "PROCESS_COUNTDOWN_OFFSET": 0.25, "webserver_bind_ip": "0.0.0.0", "webserver_port": 8000}, "env_names": ["common"]}, "uisettings": {"title": "Uisettings", "allOf": [{"$ref": "#/components/schemas/GroupUiSettings"}], "default": {"FRONTPAGE_TEXT": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Hey!<br>Let's take some pictures <br>\ud83d\udcf7\ud83d\udc95</div>", "GALLERY_ENABLE": true, "GALLERY_EMPTY_MSG": "So boring here...\ud83e\udd37\u200d\u2642\ufe0f<br>Let's take some pictures \ud83d\udcf7\ud83d\udc95", "TAKEPIC_MSG": "CHEEESE!", "TAKEPIC_MSG_TIME": 0.5, "AUTOCLOSE_NEW_ITEM_ARRIVED": 15, "SHOW_ADMIN_LINK_ON_FRONTPAGE": true}, "env_names": ["uisettings"]}, "backends": {"title": "Backends", "allOf": [{"$ref": "#/components/schemas/GroupBackends"}], "default": {"MAIN_BACKEND": "Simulated", "LIVE_BACKEND": "Disabled", "LIVEPREVIEW_ENABLED": true, "cv2_device_index": 0, "v4l_device_index": 0, "gphoto2_disable_viewfinder_before_capture": true, "gphoto2_wait_event_after_capture_trigger": false, "picamera2_AE_EXPOSURE_MODE": 1, "picamera2_focuser_module": "None", "picamera2_stream_quality": "medium", "picamera2_focuser_interval": 10}, "env_names": ["backends"]}, "wled": {"title": "Wled", "allOf": [{"$ref": "#/components/schemas/GroupWled"}], "default": {"ENABLED": false, "SERIAL_PORT": ""}, "env_names": ["wled"]}, "hardwareinput": {"title": "Hardwareinput", "allOf": [{"$ref": "#/components/schemas/GroupHardwareInput"}], "default": {"keyboard_input_enabled": false, "keyboard_input_keycode_takepic": "down"}, "env_names": ["hardwareinput"]}, "misc": {"title": "Misc", "allOf": [{"$ref": "#/components/schemas/GroupMisc"}], "default": {}, "env_names": ["misc"]}}, "description": "AppConfig class glueing all together\n\nIn the case where a value is specified for the same Settings field in multiple ways, the selected value is determined as follows (in descending order of priority):\n\n1 Arguments passed to the Settings class initialiser.\n2 Environment variables, e.g. my_prefix_special_function as described above.\n3 Variables loaded from a dotenv (.env) file.\n4 Variables loaded from the secrets directory.\n5 The default field values for the Settings model."}, "EnumDebugLevel": {"title": "EnumDebugLevel", "enum": ["DEBUG", "INFO", "WARNING", "ERROR"], "type": "string", "description": "enum for debuglevel"}, "EnumFocuserModule": {"title": "EnumFocuserModule", "enum": ["None", "LibcamAfContinuous", "LibcamAfInterval"], "type": "string", "description": "List to choose focuser module from"}, "EnumImageBackendsLive": {"title": "EnumImageBackendsLive", "enum": ["Disabled", "Simulated", "Picamera2", "WebcamCv2", "WebcamV4l"], "type": "string", "description": "enum to choose image backend LIVE from"}, "EnumImageBackendsMain": {"title": "EnumImageBackendsMain", "enum": ["Simulated", "Picamera2", "WebcamCv2", "WebcamV4l", "Gphoto2"], "type": "string", "description": "enum to choose image backend MAIN from"}, "EnumPicamStreamQuality": {"title": "EnumPicamStreamQuality", "enum": ["very low", "low", "medium", "high", "very high"], "type": "string", "description": "Enum type to describe the quality wanted from an encoder.\nThis may be passed if a specific value (such as bitrate) has not been set."}, "GroupBackends": {"title": "Camera Backend Config", "type": "object", "properties": {"MAIN_BACKEND": {"title": "Main Backend", "allOf": [{"$ref": "#/components/schemas/EnumImageBackendsMain"}], "description": "Main backend to use for high quality still captures. Also used for livepreview if backend is capable of.", "default": "Simulated"}, "LIVE_BACKEND": {"title": "Live Backend", "allOf": [{"$ref": "#/components/schemas/EnumImageBackendsLive"}], "description": "Secondary backend used for live streaming only. Useful to stream from webcam if DSLR camera has no livestream capability.", "default": "Disabled"}, "LIVEPREVIEW_ENABLED": {"title": "Livepreview Enabled", "type": "boolean", "description": "Enable livestream (if possible)", "default": true}, "cv2_device_index": {"title": "Cv2 Device Index", "type": "integer", "description": "Device index of webcam opened in cv2 backend", "default": 0}, "v4l_device_index": {"title": "V4L Device Index", "type": "integer", "description": "Device index of webcam opened in v4l backend", "default": 0}, "gphoto2_disable_viewfinder_before_capture": {"title": "Gphoto2 Disable Viewfinder Before Capture", "type": "boolean", "description": "Disable viewfinder before capture might speed up following capture autofocus. Might not work with every camera.", "default": true}, "gphoto2_wait_event_after_capture_trigger": {"title": "Gphoto2 Wait Event After Capture Trigger", "type": "boolean", "description": "Usually wait_for_event not necessary before downloading the file from camera. Adjust if necessary.", "default": false}, "picamera2_AE_EXPOSURE_MODE": {"title": "Picamera2 Ae Exposure Mode", "maximum": 4.0, "minimum": 0.0, "type": "integer", "description": "Usually 0=normal exposure, 1=short, 2=long, 3=custom. Not all necessarily supported by camera!", "default": 1}, "picamera2_focuser_module": {"title": "Picamera2 Focuser Module", "allOf": [{"$ref": "#/components/schemas/EnumFocuserModule"}], "description": "Choose continuous or interval mode to trigger autofocus of picamera2 cam.", "default": "None"}, "picamera2_stream_quality": {"title": "Picamera2 Stream Quality (for livepreview)", "allOf": [{"$ref": "#/components/schemas/EnumPicamStreamQuality"}], "description": "Lower quality results in less data to be transferred and may reduce load on display device.", "default": "medium"}, "picamera2_focuser_interval": {"title": "Picamera2 Focuser Interval", "type": "integer", "description": "Every x seconds trigger autofocus", "default": 10}}, "description": "Choose backends for still images/high quality images captured on main backend.\nIf the livepreview is enabled, the video is captured from live backend (if configured)\nor main backend."}, "GroupCommon": {"title": "Common Config", "type": "object", "properties": {"CAPTURE_CAM_RESOLUTION_WIDTH": {"title": "Capture Cam Resolution Width", "type": "integer", "description": "still photo camera resolution width on supported backends", "default": 1280}, "CAPTURE_CAM_RESOLUTION_HEIGHT": {"title": "Capture Cam Resolution Height", "type": "integer", "description": "still photo camera resolution height on supported backends", "default": 720}, "PREVIEW_CAM_RESOLUTION_WIDTH": {"title": "Preview Cam Resolution Width", "type": "integer", "description": "liveview camera resolution width on supported backends", "default": 1280}, "PREVIEW_CAM_RESOLUTION_HEIGHT": {"title": "Preview Cam Resolution Height", "type": "integer", "description": "liveview camera resolution height on supported backends", "default": 720}, "LIVEVIEW_RESOLUTION_WIDTH": {"title": "Liveview Resolution Width", "type": "integer", "description": "Liveview resolution width", "default": 1280}, "LIVEVIEW_RESOLUTION_HEIGHT": {"title": "Liveview Resolution Height", "type": "integer", "description": "Liveview resolution height", "default": 720}, "LIVEPREVIEW_QUALITY": {"title": "Livepreview Quality", "maximum": 100.0, "minimum": 10.0, "type": "integer", "description": "Livepreview stream JPEG image quality on supported backends", "default": 80, "ui_component": "QSlider"}, "THUMBNAIL_STILL_QUALITY": {"title": "Thumbnail Still Quality", "maximum": 100.0, "minimum": 10.0, "type": "integer", "description": "Still JPEG thumbnail quality, thumbs used in gallery list", "default": 60, "ui_component": "QSlider"}, "PREVIEW_STILL_QUALITY": {"title": "Preview Still Quality", "maximum": 100.0, "minimum": 10.0, "type": "integer", "description": "Still JPEG preview quality, preview still shown in gallery detail", "default": 75, "ui_component": "QSlider"}, "HIRES_STILL_QUALITY": {"title": "Hires Still Quality", "maximum": 100.0, "minimum": 10.0, "type": "integer", "description": "Still JPEG full resolution quality, applied to download images and images with filter", "default": 90, "ui_component": "QSlider"}, "PREVIEW_STILL_WIDTH": {"title": "Preview Still Width", "maximum": 2000.0, "minimum": 200.0, "type": "integer", "description": "Width of resized preview image, height is automatically calculated to keep aspect ratio", "default": 900}, "THUMBNAIL_STILL_WIDTH": {"title": "Thumbnail Still Width", "maximum": 1000.0, "minimum": 100.0, "type": "integer", "description": "Width of resized thumbnail image, height is automatically calculated to keep aspect ratio", "default": 400}, "DEBUG_LEVEL": {"title": "Debug Level", "allOf": [{"$ref": "#/components/schemas/EnumDebugLevel"}], "description": "Log verbosity. File is writte to disc, and latest log is displayed also in UI.", "default": "DEBUG"}, "LIVEPREVIEW_FRAMERATE": {"title": "Livepreview Framerate", "maximum": 30.0, "minimum": 5.0, "type": "integer", "description": "Reduce the framerate to save cpu/gpu on device displaying the live preview", "default": 15, "ui_component": "QSlider"}, "EXT_DOWNLOAD_URL": {"title": "Ext Download Url", "type": "string", "description": "URL encoded by QR code to download images from onlineservice. {filename} is replaced by actual filename", "default": "http://dl.qbooth.net/{filename}"}, "CAMERA_TRANSFORM_HFLIP": {"title": "Camera Transform Hflip", "type": "boolean", "description": "Apply horizontal flip to image source on supported backends", "default": false}, "CAMERA_TRANSFORM_VFLIP": {"title": "Camera Transform Vflip", "type": "boolean", "description": "Apply vertical flip to image source on supported backends", "default": false}, "PROCESS_COUNTDOWN_TIMER": {"title": "Process Countdown Timer", "type": "number", "description": "Countdown in seconds, started when user start a capture process", "default": 3}, "PROCESS_COUNTDOWN_OFFSET": {"title": "Process Countdown Offset", "type": "number", "description": "Trigger capture offset in seconds. 0 trigger exactly when countdown is 0. Triggers the capture offset by the given seconds to compensate for delay in camera.", "default": 0.25}, "webserver_bind_ip": {"title": "Webserver Bind Ip", "type": "string", "description": "IP/Hostname to bind the webserver to. 0.0.0.0 means bind to all IP adresses of host.", "default": "0.0.0.0"}, "webserver_port": {"title": "Webserver Port", "type": "integer", "description": "Port to serve the photobooth website. Ensure the port is available.", "default": 8000}}, "description": "Common config for photobooth."}, "GroupHardwareInput": {"title": "Hardware Input/Output Config", "type": "object", "properties": {"keyboard_input_enabled": {"title": "Keyboard Input Enabled", "type": "boolean", "description": "Enable keyboard input globally", "default": false}, "keyboard_input_keycode_takepic": {"title": "Keyboard Input Keycode Takepic", "type": "string", "description": "Keycode triggers capture of one image", "default": "down"}}, "description": "Configure GPIO, keyboard and more."}, "GroupMisc": {"title": "Miscellaneous Config", "type": "object", "properties": {}, "description": "Quite advanced, usually not necessary to touch."}, "GroupUiSettings": {"title": "Personalize the User Interface", "type": "object", "properties": {"FRONTPAGE_TEXT": {"title": "Frontpage Text", "type": "string", "description": "Text/HTML displayed on frontpage.", "default": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Hey!<br>Let's take some pictures <br>\ud83d\udcf7\ud83d\udc95</div>"}, "GALLERY_ENABLE": {"title": "Gallery Enable", "type": "boolean", "description": "Enable gallery for user.", "default": true}, "GALLERY_EMPTY_MSG": {"title": "Gallery Empty Msg", "type": "string", "description": "Message displayed if gallery is empty.", "default": "So boring here...\ud83e\udd37\u200d\u2642\ufe0f<br>Let's take some pictures \ud83d\udcf7\ud83d\udc95"}, "TAKEPIC_MSG": {"title": "Takepic Msg", "type": "string", "description": "Message shown during capture. Use icons also.", "default": "CHEEESE!"}, "TAKEPIC_MSG_TIME": {"title": "Takepic Msg Time", "type": "number", "description": "Offset in seconds, the message above shall be shown.", "default": 0.5}, "AUTOCLOSE_NEW_ITEM_ARRIVED": {"title": "Autoclose New Item Arrived", "type": "integer", "description": "Timeout in seconds a new item popup closes automatically.", "default": 15}, "SHOW_ADMIN_LINK_ON_FRONTPAGE": {"title": "Show Admin Link On Frontpage", "type": "boolean", "description": "Show link to admin center, usually only during setup.", "default": true}}, "description": "Personalize the booth's UI."}, "GroupWled": {"title": "WLED Integration Config", "type": "object", "properties": {"ENABLED": {"title": "Enabled", "type": "boolean", "description": "Enable WLED integration for user feedback during countdown and capture by LEDs.", "default": false}, "SERIAL_PORT": {"title": "Serial Port", "type": "string", "description": "Serial port the WLED device is connected to.", "default": ""}}, "description": "WLED integration for countdown led / shoot animation\nneeds WLED module connected via USB serial port and\nthree presets:\n1: standby (usually LEDs off)\n2: countdown (animates countdown)\n3: shoot (imitate a flash)\nPlease define presets on your own in WLED webfrontend"}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}}