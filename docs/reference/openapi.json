{"openapi": "3.1.0", "info": {"title": "Photobooth-App API", "description": "API may change any time.", "version": "v6.1.0"}, "paths": {"/api/actions/{action_type}/{index}": {"get": {"tags": ["actions"], "summary": "Api Trigger Model", "operationId": "api_trigger_model_api_actions__action_type___index__get", "parameters": [{"name": "action_type", "in": "path", "required": true, "schema": {"enum": ["image", "collage", "animation", "video", "multicamera"], "type": "string", "title": "Action Type"}}, {"name": "index", "in": "path", "required": true, "schema": {"type": "integer", "title": "Index"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/aquisition/stream.mjpg": {"get": {"tags": ["aquisition"], "summary": "Video Stream", "operationId": "video_stream_api_aquisition_stream_mjpg_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/aquisition/still": {"get": {"tags": ["aquisition"], "summary": "Api Still Get", "operationId": "api_still_get_api_aquisition_still_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/aquisition/mode/{mode}": {"get": {"tags": ["aquisition"], "summary": "Api Cmd Aquisition Capturemode Get", "description": "set backends to preview or capture mode (usually automatically switched as needed by processingservice)", "operationId": "api_cmd_aquisition_capturemode_get_api_aquisition_mode__mode__get", "parameters": [{"name": "mode", "in": "path", "required": true, "schema": {"enum": ["preview", "capture", "video", "idle"], "type": "string", "title": "Mode"}}], "responses": {"202": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/config": {"get": {"tags": ["config"], "summary": "Api Get Config Current Active", "operationId": "api_get_config_current_active_api_config_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AppConfig"}}}}}}}, "/api/debug/log/latest": {"get": {"tags": ["logs"], "summary": "Get Log Latest", "description": "provide latest logfile to download", "operationId": "get_log_latest_api_debug_log_latest_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/mediacollection/": {"get": {"tags": ["mediacollection"], "summary": "Api Getitems", "operationId": "api_getitems_api_mediacollection__get", "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 500, "default": 500, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MediaitemPublic"}, "title": "Response Api Getitems Api Mediacollection  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["mediacollection"], "summary": "Api Gallery Delete All", "operationId": "api_gallery_delete_all_api_mediacollection__delete", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/mediacollection/{item_id}": {"get": {"tags": ["mediacollection"], "summary": "Api Getitem", "operationId": "api_getitem_api_mediacollection__item_id__get", "parameters": [{"name": "item_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Item Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MediaitemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["mediacollection"], "summary": "Api Gallery Delete", "operationId": "api_gallery_delete_api_mediacollection__item_id__delete", "parameters": [{"name": "item_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Item Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/processing/approval/{capture_id}": {"get": {"tags": ["processing"], "summary": "Api Get Preview Image Filtered", "operationId": "api_get_preview_image_filtered_api_processing_approval__capture_id__get", "parameters": [{"name": "capture_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Capture Id"}}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/processing/confirm": {"get": {"tags": ["processing"], "summary": "Api Cmd Confirm Get", "operationId": "api_cmd_confirm_get_api_processing_confirm_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/processing/next": {"get": {"tags": ["processing"], "summary": "Api Cmd Confirm Get", "operationId": "api_cmd_confirm_get_api_processing_next_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/processing/reject": {"get": {"tags": ["processing"], "summary": "Api Cmd Reject Get", "operationId": "api_cmd_reject_get_api_processing_reject_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/processing/abort": {"get": {"tags": ["processing"], "summary": "Api Cmd Abort Get", "operationId": "api_cmd_abort_get_api_processing_abort_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/filter/": {"get": {"tags": ["filter"], "summary": "Api Get Userselectable Filters", "operationId": "api_get_userselectable_filters_api_filter__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/filter/{mediaitem_id}": {"get": {"tags": ["filter"], "summary": "Api Get Preview Image Filtered", "operationId": "api_get_preview_image_filtered_api_filter__mediaitem_id__get", "parameters": [{"name": "mediaitem_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Mediaitem Id"}}, {"name": "filter", "in": "query", "required": true, "schema": {"type": "string", "title": "Filter"}}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["filter"], "summary": "Api Applyfilter", "operationId": "api_applyfilter_api_filter__mediaitem_id__patch", "parameters": [{"name": "mediaitem_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Mediaitem Id"}}, {"name": "filter", "in": "query", "required": true, "schema": {"type": "string", "title": "Filter"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/share/actions/latest/{index}": {"post": {"tags": ["share"], "summary": "Api Share Latest", "operationId": "api_share_latest_api_share_actions_latest__index__post", "parameters": [{"name": "index", "in": "path", "required": true, "schema": {"type": "integer", "title": "Index"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"type": "object", "additionalProperties": {"type": "string"}}, {"type": "null"}], "title": "Parameters"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/share/actions/{index}": {"post": {"tags": ["share"], "summary": "Api Share Latest", "operationId": "api_share_latest_api_share_actions__index__post", "parameters": [{"name": "index", "in": "path", "required": true, "schema": {"type": "integer", "title": "Index"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"type": "object", "additionalProperties": {"type": "string"}}, {"type": "null"}], "title": "Parameters"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/share/actions/{id}/{index}": {"post": {"tags": ["share"], "summary": "Api Share Item Id", "operationId": "api_share_item_id_api_share_actions__id___index__post", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}, {"name": "index", "in": "path", "required": true, "schema": {"type": "integer", "title": "Index"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"type": "object", "additionalProperties": {"type": "string"}}, {"type": "null"}], "title": "Parameters"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/sse": {"get": {"tags": ["home"], "summary": "Subscribe", "description": "Eventstream to feed clients with server generated events and data", "operationId": "subscribe_api_sse_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/system/host/{param}": {"get": {"tags": ["system"], "summary": "Api Cmd Host", "operationId": "api_cmd_host_api_system_host__param__get", "parameters": [{"name": "param", "in": "path", "required": true, "schema": {"enum": ["reboot", "shutdown"], "type": "string", "title": "Param"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/system/service/{param}": {"get": {"tags": ["system"], "summary": "Api Cmd Service", "operationId": "api_cmd_service_api_system_service__param__get", "parameters": [{"name": "param", "in": "path", "required": true, "schema": {"const": "reload", "type": "string", "title": "Param"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/system/systemctl/{param}": {"get": {"tags": ["system"], "summary": "Api Cmd Systemctl", "operationId": "api_cmd_systemctl_api_system_systemctl__param__get", "parameters": [{"name": "param", "in": "path", "required": true, "schema": {"enum": ["restart", "stop", "start", "install", "uninstall"], "type": "string", "title": "Param"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/auth/token": {"post": {"tags": ["admin", "auth"], "summary": "Login For Access Token", "operationId": "login_for_access_token_api_admin_auth_token_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login_for_access_token_api_admin_auth_token_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/auth/me": {"get": {"tags": ["admin", "auth"], "summary": "Read Users Me", "operationId": "read_users_me_api_admin_auth_me_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/User"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/config/list": {"get": {"tags": ["admin", "config"], "summary": "Api Get Configurables", "operationId": "api_get_configurables_api_admin_config_list_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/config": {"delete": {"tags": ["admin", "config"], "summary": "Api Reset All Config", "operationId": "api_reset_all_config_api_admin_config_delete", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/config/{configurable}": {"delete": {"tags": ["admin", "config"], "summary": "Api Reset Config", "operationId": "api_reset_config_api_admin_config__configurable__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "configurable", "in": "path", "required": true, "schema": {"type": "string", "title": "Configurable"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["admin", "config"], "summary": "Api Get Config Current Active", "operationId": "api_get_config_current_active_api_admin_config__configurable__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "configurable", "in": "path", "required": true, "schema": {"type": "string", "title": "Configurable"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["admin", "config"], "summary": "Api Post Config Current", "description": "Update the configuration for appconfig (configurable=app) or a plugin (example configurable=\"photobooth.plugins.gpio_lights\")\nThe configuration is persisted also after update.\nupdated_config is a generic type valid to receive json objects instead of a pydantic model because depending on the configurable\nthe model is different.\n\nArgs:\n    configurable (str): app for appconfig, otherwise str with plugin name to update the config for. Defaults to None.\n    updated_config (dict[AnyStr, Any]): valid json that is validated against appconfig or plugin config pydantic models", "operationId": "api_post_config_current_api_admin_config__configurable__patch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "configurable", "in": "path", "required": true, "schema": {"type": "string", "title": "Configurable"}}, {"name": "reload", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Reload"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "title": "Updated Config"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/config/{configurable}/schema": {"get": {"tags": ["admin", "config"], "summary": "Api Get Config Schema", "operationId": "api_get_config_schema_api_admin_config__configurable__schema_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "configurable", "in": "path", "required": true, "schema": {"type": "string", "title": "Configurable"}}, {"name": "schema_type", "in": "query", "required": false, "schema": {"enum": ["default", "dereferenced"], "type": "string", "default": "default", "title": "Schema Type"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/files/search": {"get": {"tags": ["admin", "files"], "summary": "Get Search", "operationId": "get_search_api_admin_files_search_get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "q", "in": "query", "required": true, "schema": {"type": "string", "title": "Q"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/PathListItem"}, "title": "Response Get Search Api Admin Files Search Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/files/list/{dir}": {"get": {"tags": ["admin", "files"], "summary": "Get List", "operationId": "get_list_api_admin_files_list__dir__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "dir", "in": "path", "required": true, "schema": {"type": "string", "title": "Dir"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/PathListItem"}, "title": "Response Get List Api Admin Files List  Dir  Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/files/file/{file}": {"get": {"tags": ["admin", "files"], "summary": "Get File", "operationId": "get_file_api_admin_files_file__file__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "file", "in": "path", "required": true, "schema": {"type": "string", "title": "File"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/files/file/upload": {"post": {"tags": ["admin", "files"], "summary": "Create Upload File", "operationId": "create_upload_file_api_admin_files_file_upload_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_create_upload_file_api_admin_files_file_upload_post"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/files/folder/new": {"post": {"tags": ["admin", "files"], "summary": "Post Folder New", "description": "need to provide full path starting from CWD.", "operationId": "post_folder_new_api_admin_files_folder_new_post", "requestBody": {"content": {"application/json": {"schema": {"type": "string", "title": "New Folder Name"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/files/delete": {"post": {"tags": ["admin", "files"], "summary": "Post Delete", "operationId": "post_delete_api_admin_files_delete_post", "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/PathListItem"}, "type": "array", "title": "Selected Paths"}}}, "required": true}, "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/files/zip": {"post": {"tags": ["admin", "files"], "summary": "Post Zip", "operationId": "post_zip_api_admin_files_zip_post", "requestBody": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/PathListItem"}, "type": "array", "title": "Selected Paths"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/files/clearrecycledir": {"get": {"tags": ["admin", "files"], "summary": "Api Clearrecycledir", "description": "Warning: deletes all files permanently without any further confirmation\n\nRaises:\n    HTTPException: _description_", "operationId": "api_clearrecycledir_api_admin_files_clearrecycledir_get", "responses": {"204": {"description": "Successful Response"}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/information/cntr/reset/{field}": {"get": {"tags": ["admin", "information"], "summary": "Api Get Statscounter Reset Field", "operationId": "api_get_statscounter_reset_field_api_admin_information_cntr_reset__field__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "field", "in": "path", "required": true, "schema": {"type": "string", "title": "Field"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/information/cntr/reset/": {"get": {"tags": ["admin", "information"], "summary": "Api Get Statscounter Reset All", "operationId": "api_get_statscounter_reset_all_api_admin_information_cntr_reset__get", "responses": {"204": {"description": "Successful Response"}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/admin/share/cntr/reset/{field}": {"get": {"tags": ["admin", "information"], "summary": "Api Get Limitscounter Reset Field", "operationId": "api_get_limitscounter_reset_field_api_admin_share_cntr_reset__field__get", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "field", "in": "path", "required": true, "schema": {"type": "string", "title": "Field"}}], "responses": {"204": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/admin/share/cntr/reset/": {"get": {"tags": ["admin", "information"], "summary": "Api Get Limitscounter Reset All", "operationId": "api_get_limitscounter_reset_all_api_admin_share_cntr_reset__get", "responses": {"204": {"description": "Successful Response"}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/media/{dimension}/{mediaitem_id}": {"get": {"tags": ["media"], "summary": "Api Getitems", "operationId": "api_getitems_media__dimension___mediaitem_id__get", "parameters": [{"name": "mediaitem_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Mediaitem Id"}}, {"name": "dimension", "in": "path", "required": true, "schema": {"$ref": "#/components/schemas/DimensionTypes"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/": {"get": {"tags": ["static"], "summary": "Index", "description": "return homepage of booth", "operationId": "index__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/private.css": {"get": {"tags": ["static"], "summary": "Ui Private Css", "description": "if private.css exists return the file content, otherwise send empty response to avoid 404", "operationId": "ui_private_css_private_css_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/userdata/{filepath}": {"get": {"tags": ["userdata"], "summary": "Api Get Userfiles", "operationId": "api_get_userfiles_userdata__filepath__get", "parameters": [{"name": "filepath", "in": "path", "required": true, "schema": {"type": "string", "title": "Filepath"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AnimationConfigurationSet": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name to identify, only used for display in admin center.", "default": "default action"}, "jobcontrol": {"$ref": "#/components/schemas/MultiImageJobControl"}, "processing": {"$ref": "#/components/schemas/AnimationProcessing"}, "trigger": {"$ref": "#/components/schemas/Trigger"}}, "type": "object", "required": ["jobcontrol", "processing", "trigger"], "title": "Postprocess animation captures", "description": "Configure stages how to process images after capture."}, "AnimationMergeDefinition": {"properties": {"duration": {"type": "integer", "minimum": 0.0, "title": "Duration", "default": 2000}, "predefined_image": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Predefined Image", "files_list_api": "/api/admin/files/search"}, "image_filter": {"$ref": "#/components/schemas/PluginFilters", "default": "original"}}, "type": "object", "title": "AnimationMergeDefinition"}, "AnimationProcessing": {"properties": {"canvas_width": {"type": "integer", "title": "Canvas Width", "description": "Width (X) in pixel of animation image (GIF). The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 1500}, "canvas_height": {"type": "integer", "title": "Canvas Height", "description": "Height (Y) in pixel of animation image (GIF). The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 900}, "merge_definition": {"items": {"$ref": "#/components/schemas/AnimationMergeDefinition"}, "type": "array", "title": "Merge Definition", "description": "Sequence images in an animated GIF. Predefined image files are used instead a camera capture. File needs to be located in working directory/userdata/*", "default": []}}, "type": "object", "title": "Animation (GIF) processing after capture", "description": "Configure stages how to process collage after capture."}, "AppConfig": {"properties": {"common": {"$ref": "#/components/schemas/GroupCommon", "default": {"admin_password": "************", "logging_level": "DEBUG", "users_delete_to_recycle_dir": true}}, "actions": {"$ref": "#/components/schemas/GroupActions", "default": {"image": [{"jobcontrol": {"countdown_capture": 2.0}, "name": "default action", "processing": {"fill_background_color": "blue", "fill_background_enable": false, "image_filter": "original", "img_background_enable": true, "img_background_file": "userdata\\demoassets\\backgrounds\\pink-7761356_1920.jpg", "img_frame_enable": true, "img_frame_file": "userdata\\demoassets\\frames\\frame_image_photobooth-app.png", "texts": [{"color": "#333", "font": "userdata\\demoassets\\fonts\\Roboto-Bold.ttf", "font_size": 30, "pos_x": 1300, "pos_y": 1250, "rotate": 0, "text": "Visit photobooth-app.org and build yours!"}], "texts_enable": true}, "trigger": {"gpio_trigger": {"pin": "27", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "i"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "photo_camera", "show_button": true, "title": "Image", "use_custom_color": false}}}], "collage": [{"jobcontrol": {"approve_autoconfirm_timeout": 15.0, "ask_approval_each_capture": true, "countdown_capture": 2.0, "countdown_capture_second_following": 1.0, "show_individual_captures_in_gallery": true}, "name": "default action", "processing": {"canvas_fill_background_color": "green", "canvas_fill_background_enable": false, "canvas_height": 1280, "canvas_img_background_enable": false, "canvas_img_front_enable": true, "canvas_img_front_file": "userdata\\demoassets\\frames\\pixabay-poster-2871536_1920.png", "canvas_texts": [{"color": "#333", "font": "userdata\\demoassets\\fonts\\Roboto-Bold.ttf", "font_size": 40, "pos_x": 200, "pos_y": 1100, "rotate": 1, "text": "Have a nice day :)"}], "canvas_texts_enable": true, "canvas_width": 1920, "capture_fill_background_color": "blue", "capture_fill_background_enable": false, "capture_img_background_enable": false, "merge_definition": [{"description": "left", "height": 725, "image_filter": "FilterPilgram2.earlybird", "pos_x": 160, "pos_y": 220, "rotate": 0, "width": 510}, {"description": "middle predefined", "height": 725, "image_filter": "original", "pos_x": 705, "pos_y": 66, "predefined_image": "userdata\\demoassets\\predefined_images\\photobooth-collage-predefined-image.png", "rotate": 0, "width": 510}, {"description": "right", "height": 725, "image_filter": "FilterPilgram2.reyes", "pos_x": 1245, "pos_y": 220, "rotate": 0, "width": 510}]}, "trigger": {"gpio_trigger": {"pin": "22", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "c"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "auto_awesome_mosaic", "show_button": true, "title": "Collage", "use_custom_color": false}}}], "animation": [{"jobcontrol": {"approve_autoconfirm_timeout": 15.0, "ask_approval_each_capture": false, "countdown_capture": 2.0, "countdown_capture_second_following": 0.5, "show_individual_captures_in_gallery": false}, "name": "default action", "processing": {"canvas_height": 900, "canvas_width": 1500, "merge_definition": [{"duration": 2000, "image_filter": "FilterPilgram2.crema"}, {"duration": 2000, "image_filter": "FilterPilgram2.inkwell"}, {"duration": 2000, "image_filter": "original"}, {"duration": 2000, "image_filter": "original"}, {"duration": 4000, "image_filter": "original", "predefined_image": "userdata\\demoassets\\predefined_images\\photobooth-gif-animation-predefined-image.png"}]}, "trigger": {"gpio_trigger": {"pin": "24", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "g"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "gif_box", "show_button": true, "title": "Animation", "use_custom_color": false}}}], "video": [{"jobcontrol": {"countdown_capture": 2.0}, "name": "default action", "processing": {"boomerang": true, "video_duration": 5, "video_framerate": 15}, "trigger": {"gpio_trigger": {"pin": "25", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "v"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "movie", "show_button": true, "title": "Video", "use_custom_color": false}}}], "multicamera": [{"jobcontrol": {"countdown_capture": 2.0, "show_individual_captures_in_gallery": false}, "name": "default action", "processing": {"canvas_height": 900, "canvas_width": 1500, "duration": 125, "image_filter": "original"}, "trigger": {"gpio_trigger": {"pin": "12", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "w"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "burst_mode", "show_button": true, "title": "Wigglegram", "use_custom_color": false}}}]}}, "share": {"$ref": "#/components/schemas/GroupShare", "default": {"sharing_enabled": true, "number_direct_access_buttons": 1, "actions": [{"handles_images_only": false, "name": "default print settings", "processing": {"ask_user_for_parameter_input": false, "max_shares": 0, "parameters": [{"default": "1", "key": "copies", "label": "Copies", "ui_type": "int", "valid_max": "3", "valid_min": "1"}], "parameters_dialog_action_icon": "print", "parameters_dialog_action_label": "GO", "parameters_dialog_caption": "How many copies?", "share_blocked_time": 3, "share_command": "echo {filename} {copies}"}, "trigger": {"gpio_trigger": {"pin": "23", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "p"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "print", "show_button": true, "title": "Print", "use_custom_color": false}}}, {"handles_images_only": true, "name": "default print settings", "processing": {"ask_user_for_parameter_input": true, "max_shares": 0, "parameters": [{"default": "1", "key": "copies", "label": "Copies", "ui_type": "int", "valid_max": "3", "valid_min": "1"}, {"default": "me@mgineer85.de", "key": "mail", "label": "E-Mail address", "ui_type": "input", "valid_max": "128", "valid_min": "5"}], "parameters_dialog_action_icon": "mail", "parameters_dialog_action_label": "send", "parameters_dialog_caption": "Print and mail...", "share_blocked_time": 3, "share_command": "echo {filename} {copies} {mail}"}, "trigger": {"gpio_trigger": {"pin": "23", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "p"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "print", "show_button": true, "title": "Print", "use_custom_color": false}}}]}}, "qrshare": {"$ref": "#/components/schemas/GroupQrShare", "default": {"enabled": false, "shareservice_url": "https://photobooth-app.org/extras/shareservice-landing/", "shareservice_apikey": "changedefault!", "share_custom_qr_url": "http://localhost:8000/media/full/{identifier}"}}, "filetransfer": {"$ref": "#/components/schemas/GroupFileTransfer", "default": {"enabled": false, "target_folder_name": "photobooth"}}, "mediaprocessing": {"$ref": "#/components/schemas/GroupMediaprocessing", "default": {"HIRES_STILL_QUALITY": 90, "full_still_length": 1500, "preview_still_length": 1200, "thumbnail_still_length": 400, "video_bitrate": 3000, "video_compatibility_mode": false, "removechromakey_enable": false, "removechromakey_keycolor": 110, "removechromakey_tolerance": 10}}, "uisettings": {"$ref": "#/components/schemas/GroupUiSettings", "default": {"PRIMARY_COLOR": "#196cb0", "SECONDARY_COLOR": "#b8124f", "theme": "system", "show_gallery_on_frontpage": true, "show_admin_on_frontpage": true, "admin_button_invisible": false, "show_frontpage_timeout": 5, "enable_automatic_slideshow": true, "show_automatic_slideshow_timeout": 300, "enable_livestream_when_idle": true, "enable_livestream_when_active": true, "livestream_mirror_effect": true, "livestream_blurredbackground": false, "enable_livestream_frameoverlay": true, "livestream_frameoverlay_image": "userdata\\demoassets\\frames\\frame_image_photobooth-app.png", "FRONTPAGE_TEXT": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Hey!<br>Let's take some pictures! <br>\ud83d\udcf7</div>", "TAKEPIC_MSG_TIME": 0.5, "TAKEPIC_MSG_TEXT": "\ud83d\ude03", "AUTOCLOSE_NEW_ITEM_ARRIVED": 30, "GALLERY_EMPTY_MSG": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Empty, Zero, Nada! \ud83e\udd37\u200d\u2642\ufe0f<br>Let's take some pictures! <br>\ud83d\udcf7\ud83d\udc95</div>", "gallery_show_qrcode": true, "qrcode_text_above": "\ud83d\udc4b Download your photo!", "qrcode_text_below": "Scan above code with your phone.", "gallery_show_filter": true, "gallery_show_download": true, "gallery_show_delete": true, "gallery_show_shareprint": true}}, "backends": {"$ref": "#/components/schemas/GroupBackends", "default": {"enable_livestream": true, "retry_capture": 3, "countdown_camera_capture_offset": 0.2, "index_backend_stills": 0, "index_backend_video": 0, "index_backend_multicam": 0, "group_backends": [{"digicamcontrol": {"base_url": "http://127.0.0.1:5513", "orientation": "1: 0\u00b0"}, "enabled": true, "selected_device": "VirtualCamera", "virtualcamera": {"emulate_hires_static_still": false, "emulate_multicam_capture_devices": 4, "framerate": 15, "orientation": "1: 0\u00b0"}, "webcamcv2": {"CAM_RESOLUTION_HEIGHT": 10000, "CAM_RESOLUTION_WIDTH": 10000, "device_index": 0, "framerate": 15, "orientation": "1: 0\u00b0"}, "wigglecam": {"index_cam_stills": 0, "index_cam_video": 0, "keep_node_copy": false, "nodes": [{"base_url": "http://127.0.0.1:8010/", "description": "TestNode"}]}}]}}, "hardwareinputoutput": {"$ref": "#/components/schemas/GroupHardwareInputOutput", "default": {"keyboard_input_enabled": false, "gpio_enabled": false, "gpio_pin_shutdown": 17, "gpio_pin_reboot": 18}}, "misc": {"$ref": "#/components/schemas/GroupMisc", "default": {"secret_key": "ThisIsTheDefaultSecret"}}}, "type": "object", "title": "AppConfig", "description": "AppConfig class glueing all together\n\nIn the case where a value is specified for the same Settings field in multiple ways, the selected value is determined as follows\n(in descending order of priority):\n\n1 Arguments passed to the Settings class initialiser.\n2 Environment variables, e.g. my_prefix_special_function as described above.\n3 Variables loaded from a dotenv (.env) file.\n4 Variables loaded from the secrets directory.\n5 The default field values for the Settings model."}, "Body_create_upload_file_api_admin_files_file_upload_post": {"properties": {"upload_target_folder": {"type": "string", "title": "Upload Target Folder"}, "uploaded_files": {"items": {"type": "string", "format": "binary"}, "type": "array", "title": "Uploaded Files"}}, "type": "object", "required": ["upload_target_folder", "uploaded_files"], "title": "Body_create_upload_file_api_admin_files_file_upload_post"}, "Body_login_for_access_token_api_admin_auth_token_post": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login_for_access_token_api_admin_auth_token_post"}, "CollageConfigurationSet": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name to identify, only used for display in admin center.", "default": "default action"}, "jobcontrol": {"$ref": "#/components/schemas/MultiImageJobControl"}, "processing": {"$ref": "#/components/schemas/CollageProcessing"}, "trigger": {"$ref": "#/components/schemas/Trigger"}}, "type": "object", "required": ["jobcontrol", "processing", "trigger"], "title": "Postprocess collage captures", "description": "Configure stages how to process images after capture."}, "CollageMergeDefinition": {"properties": {"description": {"type": "string", "title": "Description", "default": ""}, "pos_x": {"type": "integer", "minimum": 0.0, "title": "Pos X", "default": 50}, "pos_y": {"type": "integer", "minimum": 0.0, "title": "Pos Y", "default": 50}, "width": {"type": "integer", "minimum": 0.0, "title": "Width", "default": 600}, "height": {"type": "integer", "minimum": 0.0, "title": "Height", "default": 600}, "rotate": {"type": "integer", "title": "Rotate", "default": 0}, "predefined_image": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Predefined Image", "files_list_api": "/api/admin/files/search"}, "image_filter": {"$ref": "#/components/schemas/PluginFilters", "default": "original"}}, "type": "object", "title": "CollageMergeDefinition"}, "CollageProcessing": {"properties": {"capture_fill_background_enable": {"type": "boolean", "title": "Capture Fill Background Enable", "description": "Apply solid color background to captured image (useful only if image is extended or background removed)", "default": false}, "capture_fill_background_color": {"type": "string", "format": "color", "title": "Capture Fill Background Color", "description": "Solid color used to fill background.", "default": "blue"}, "capture_img_background_enable": {"type": "boolean", "title": "Capture Img Background Enable", "description": "Add image from file to background (useful only if image is extended or background removed)", "default": false}, "capture_img_background_file": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Capture Img Background File", "description": "Image file to use as background filling transparent area. File needs to be located in working directory/userdata/*", "files_list_api": "/api/admin/files/search"}, "canvas_width": {"type": "integer", "title": "Canvas Width", "description": "Width (X) in pixel of collage image. The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 1920}, "canvas_height": {"type": "integer", "title": "Canvas Height", "description": "Height (Y) in pixel of collage image. The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 1280}, "merge_definition": {"items": {"$ref": "#/components/schemas/CollageMergeDefinition"}, "type": "array", "title": "Merge Definition", "description": "How to arrange single images in the collage. Pos_x/Pos_y measure in pixel starting 0/0 at top-left in image. Width/Height in pixels. Aspect ratio is kept always. Predefined image files are used instead a camera capture. File needs to be located in working directory/userdata/*"}, "canvas_fill_background_enable": {"type": "boolean", "title": "Canvas Fill Background Enable", "description": "Apply solid color background to collage", "default": false}, "canvas_fill_background_color": {"type": "string", "format": "color", "title": "Canvas Fill Background Color", "description": "Solid color used to fill background.", "default": "green"}, "canvas_img_background_enable": {"type": "boolean", "title": "Canvas Img Background Enable", "description": "Add image from file to background.", "default": false}, "canvas_img_background_file": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Canvas Img Background File", "description": "Image file to use as background filling transparent area. File needs to be located in userdata/*", "files_list_api": "/api/admin/files/search"}, "canvas_img_front_enable": {"type": "boolean", "title": "Canvas Img Front Enable", "description": "Overlay image on canvas image.", "default": false}, "canvas_img_front_file": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Canvas Img Front File", "description": "Image file to paste on top over photos and backgrounds. Photos are visible only through transparant parts. Image needs to be transparent (PNG). File needs to be located in working directory/userdata/*", "files_list_api": "/api/admin/files/search"}, "canvas_texts_enable": {"type": "boolean", "title": "Canvas Texts Enable", "description": "General enable apply texts below.", "default": false}, "canvas_texts": {"items": {"$ref": "#/components/schemas/TextsConfig"}, "type": "array", "title": "Canvas Texts", "description": "Text to overlay on final collage. Pos_x/Pos_y measure in pixel starting 0/0 at top-left in image. Font to use in text stages. File needs to be located in working directory/userdata/*", "default": []}}, "type": "object", "required": ["merge_definition"], "title": "Collage processing", "description": "Configure stages how to process collage after capture."}, "ConfigCameraNode": {"properties": {"description": {"type": "string", "title": "Description", "description": "Not used in the app, you can use it to identify the node.", "default": ""}, "base_url": {"type": "string", "maxLength": 2083, "minLength": 1, "format": "uri", "title": "Base Url", "description": "Base URL (including port) the node can be accessed by. Based on your setup, usually IP is preferred over hostname.", "default": "http://127.0.0.1:8010/"}}, "type": "object", "title": "ConfigCameraNode"}, "DimensionTypes": {"type": "string", "enum": ["full", "preview", "thumbnail"], "title": "DimensionTypes", "description": "SQLalchemy persists the name, fastapi validates against the value.\nWe just set name==value so it works in both worlds without any conversion.\nRef: https://github.com/fastapi/fastapi/discussions/11098"}, "GpioTrigger": {"properties": {"pin": {"type": "string", "title": "Pin", "description": "GPIO the button is connected to.", "default": ""}, "trigger_on": {"type": "string", "enum": ["pressed", "released", "longpress"], "title": "Trigger On", "description": "Trigger action when button pressed (contact closed), released (contact open after closed) or longpress (hold for 0.6 seconds).", "default": "pressed"}}, "type": "object", "title": "GPIO triggers configuration", "description": "Configure trigger the user can interact with. Sources are GPIO and keyboard."}, "GroupActions": {"properties": {"image": {"items": {"$ref": "#/components/schemas/SingleImageConfigurationSet"}, "type": "array", "title": "Image", "description": "Capture single images.", "default": [{"name": "default action", "jobcontrol": {"countdown_capture": 2.0}, "processing": {"fill_background_color": "blue", "fill_background_enable": false, "image_filter": "original", "img_background_enable": true, "img_background_file": "userdata\\demoassets\\backgrounds\\pink-7761356_1920.jpg", "img_frame_enable": true, "img_frame_file": "userdata\\demoassets\\frames\\frame_image_photobooth-app.png", "texts": [{"color": "#333", "font": "userdata\\demoassets\\fonts\\Roboto-Bold.ttf", "font_size": 30, "pos_x": 1300, "pos_y": 1250, "rotate": 0, "text": "Visit photobooth-app.org and build yours!"}], "texts_enable": true}, "trigger": {"gpio_trigger": {"pin": "27", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "i"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "photo_camera", "show_button": true, "title": "Image", "use_custom_color": false}}}]}, "collage": {"items": {"$ref": "#/components/schemas/CollageConfigurationSet"}, "type": "array", "title": "Collage", "description": "Capture collages consist of one or more still images.", "default": [{"name": "default action", "jobcontrol": {"approve_autoconfirm_timeout": 15.0, "ask_approval_each_capture": true, "countdown_capture": 2.0, "countdown_capture_second_following": 1.0, "show_individual_captures_in_gallery": true}, "processing": {"canvas_fill_background_color": "green", "canvas_fill_background_enable": false, "canvas_height": 1280, "canvas_img_background_enable": false, "canvas_img_front_enable": true, "canvas_img_front_file": "userdata\\demoassets\\frames\\pixabay-poster-2871536_1920.png", "canvas_texts": [{"color": "#333", "font": "userdata\\demoassets\\fonts\\Roboto-Bold.ttf", "font_size": 40, "pos_x": 200, "pos_y": 1100, "rotate": 1, "text": "Have a nice day :)"}], "canvas_texts_enable": true, "canvas_width": 1920, "capture_fill_background_color": "blue", "capture_fill_background_enable": false, "capture_img_background_enable": false, "merge_definition": [{"description": "left", "height": 725, "image_filter": "FilterPilgram2.earlybird", "pos_x": 160, "pos_y": 220, "rotate": 0, "width": 510}, {"description": "middle predefined", "height": 725, "image_filter": "original", "pos_x": 705, "pos_y": 66, "predefined_image": "userdata\\demoassets\\predefined_images\\photobooth-collage-predefined-image.png", "rotate": 0, "width": 510}, {"description": "right", "height": 725, "image_filter": "FilterPilgram2.reyes", "pos_x": 1245, "pos_y": 220, "rotate": 0, "width": 510}]}, "trigger": {"gpio_trigger": {"pin": "22", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "c"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "auto_awesome_mosaic", "show_button": true, "title": "Collage", "use_custom_color": false}}}]}, "animation": {"items": {"$ref": "#/components/schemas/AnimationConfigurationSet"}, "type": "array", "title": "Animation", "description": "Capture GIF animation sequence consist of one or more still images. It's not a video but a low number of still images.", "default": [{"name": "default action", "jobcontrol": {"approve_autoconfirm_timeout": 15.0, "ask_approval_each_capture": false, "countdown_capture": 2.0, "countdown_capture_second_following": 0.5, "show_individual_captures_in_gallery": false}, "processing": {"canvas_height": 900, "canvas_width": 1500, "merge_definition": [{"duration": 2000, "image_filter": "FilterPilgram2.crema"}, {"duration": 2000, "image_filter": "FilterPilgram2.inkwell"}, {"duration": 2000, "image_filter": "original"}, {"duration": 2000, "image_filter": "original"}, {"duration": 4000, "image_filter": "original", "predefined_image": "userdata\\demoassets\\predefined_images\\photobooth-gif-animation-predefined-image.png"}]}, "trigger": {"gpio_trigger": {"pin": "24", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "g"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "gif_box", "show_button": true, "title": "Animation", "use_custom_color": false}}}]}, "video": {"items": {"$ref": "#/components/schemas/VideoConfigurationSet"}, "type": "array", "title": "Video", "description": "Capture videos from live streaming backend.", "default": [{"name": "default action", "jobcontrol": {"countdown_capture": 2.0}, "processing": {"boomerang": true, "video_duration": 5, "video_framerate": 15}, "trigger": {"gpio_trigger": {"pin": "25", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "v"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "movie", "show_button": true, "title": "Video", "use_custom_color": false}}}]}, "multicamera": {"items": {"$ref": "#/components/schemas/MulticameraConfigurationSet"}, "type": "array", "title": "Multicamera", "description": "Capture wigglegrams from a multicamera backend.", "default": [{"name": "default action", "jobcontrol": {"countdown_capture": 2.0, "show_individual_captures_in_gallery": false}, "processing": {"canvas_height": 900, "canvas_width": 1500, "duration": 125, "image_filter": "original"}, "trigger": {"gpio_trigger": {"pin": "12", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "w"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "burst_mode", "show_button": true, "title": "Wigglegram", "use_custom_color": false}}}]}}, "type": "object", "title": "Actions configuration", "description": "Configure actions like capture photo, video, collage and animations."}, "GroupBackend": {"properties": {"enabled": {"type": "boolean", "title": "Load and start backend", "description": "Selected device will be loaded and started.", "default": true}, "selected_device": {"type": "string", "enum": ["VirtualCamera", "WebcamCv2", "Wigglecam", "Digicamcontrol"], "title": "Configure device", "description": "Select backend and configure the device below", "default": "VirtualCamera"}, "virtualcamera": {"$ref": "#/components/schemas/GroupBackendVirtualcamera", "default": {"orientation": "1: 0\u00b0", "framerate": 15, "emulate_hires_static_still": false, "emulate_multicam_capture_devices": 4}}, "webcamcv2": {"$ref": "#/components/schemas/GroupBackendOpenCv2", "default": {"orientation": "1: 0\u00b0", "device_index": 0, "CAM_RESOLUTION_WIDTH": 10000, "CAM_RESOLUTION_HEIGHT": 10000, "framerate": 15}}, "wigglecam": {"$ref": "#/components/schemas/GroupBackendWigglecam", "default": {"keep_node_copy": false, "index_cam_stills": 0, "index_cam_video": 0, "nodes": [{"base_url": "http://127.0.0.1:8010/", "description": "TestNode"}]}}, "digicamcontrol": {"$ref": "#/components/schemas/GroupBackendDigicamcontrol", "default": {"orientation": "1: 0\u00b0", "base_url": "http://127.0.0.1:5513"}}}, "type": "object", "title": "Main Backend Configuration", "description": "Choose backends for still images/high quality images captured on main backend.\nIf the livepreview is enabled, the video is captured from live backend (if configured)\nor main backend."}, "GroupBackendDigicamcontrol": {"properties": {"orientation": {"type": "string", "enum": ["1: 0\u00b0", "2: 0\u00b0 mirrored", "3: 180\u00b0", "4: 180\u00b0 mirrored", "5: 90\u00b0", "6: 90\u00b0 mirrored", "7: 270\u00b0", "8: 270\u00b0 mirrored"], "title": "Orientation", "description": "Choose the orientation of the camera. 0\u00b0 is default orientation and applies no adjustment. The orientation will be set in the EXIF data so transformations are applied lossless.", "default": "1: 0\u00b0"}, "base_url": {"type": "string", "title": "Base Url", "description": "Base URL used to connect to the host running the digicamcontrol software. Usually photobooth-app and digicamcontrol are on the same computer and no adjustmend needed.", "default": "http://127.0.0.1:5513"}}, "type": "object", "title": "Digicamcontrol"}, "GroupBackendOpenCv2": {"properties": {"orientation": {"type": "string", "enum": ["1: 0\u00b0", "2: 0\u00b0 mirrored", "3: 180\u00b0", "4: 180\u00b0 mirrored", "5: 90\u00b0", "6: 90\u00b0 mirrored", "7: 270\u00b0", "8: 270\u00b0 mirrored"], "title": "Orientation", "description": "Choose the orientation of the camera. 0\u00b0 is default orientation and applies no adjustment. The orientation will be set in the EXIF data so transformations are applied lossless.", "default": "1: 0\u00b0"}, "device_index": {"type": "integer", "title": "Device Index", "description": "Device index of webcam. Usually 0 or 1, check docs how to determine.", "default": 0}, "CAM_RESOLUTION_WIDTH": {"type": "integer", "title": "Cam Resolution Width", "description": "Resolution width requested from camera.", "default": 10000}, "CAM_RESOLUTION_HEIGHT": {"type": "integer", "title": "Cam Resolution Height", "description": "Resolution height requested from camera.", "default": 10000}, "framerate": {"type": "integer", "maximum": 30.0, "minimum": 5.0, "title": "Framerate", "description": "Reduce the framerate to save cpu/gpu on device displaying the live preview", "default": 15}}, "type": "object", "title": "OpenCv2"}, "GroupBackendVirtualcamera": {"properties": {"orientation": {"type": "string", "enum": ["1: 0\u00b0", "2: 0\u00b0 mirrored", "3: 180\u00b0", "4: 180\u00b0 mirrored", "5: 90\u00b0", "6: 90\u00b0 mirrored", "7: 270\u00b0", "8: 270\u00b0 mirrored"], "title": "Orientation", "description": "Choose the orientation of the camera. 0\u00b0 is default orientation and applies no adjustment. The orientation will be set in the EXIF data so transformations are applied lossless.", "default": "1: 0\u00b0"}, "framerate": {"type": "integer", "maximum": 30.0, "minimum": 5.0, "title": "Framerate", "description": "Reduce the framerate to save cpu/gpu on device displaying the live preview", "default": 15}, "emulate_hires_static_still": {"type": "boolean", "title": "Emulate Hires Static Still", "description": "Deliver high-resolution still image instead the demovideo. Useful to test the processing times by emulating hires cameras.", "default": false}, "emulate_multicam_capture_devices": {"type": "integer", "maximum": 20.0, "minimum": 2.0, "title": "Emulate Multicam Capture Devices", "description": "Number of emulated cameras when asking for synchronized capture for wigglegrams.", "default": 4}}, "type": "object", "title": "VirtualCamera"}, "GroupBackendWigglecam": {"properties": {"keep_node_copy": {"type": "boolean", "title": "Keep Node Copy", "default": false}, "index_cam_stills": {"type": "integer", "title": "Index Cam Stills", "description": "Index of one node below to capture stills.", "default": 0}, "index_cam_video": {"type": "integer", "title": "Index Cam Video", "description": "Index of one backend below to capture live preview and video.", "default": 0}, "nodes": {"items": {"$ref": "#/components/schemas/ConfigCameraNode"}, "type": "array", "title": "Nodes", "default": [{"description": "TestNode", "base_url": "http://127.0.0.1:8010/"}]}}, "type": "object", "title": "Wigglecam Connector"}, "GroupBackends": {"properties": {"enable_livestream": {"type": "boolean", "title": "Enable Livestream", "description": "Enable livestream (if possible)", "default": true}, "retry_capture": {"type": "integer", "maximum": 5.0, "minimum": 1.0, "title": "Retry Capture", "description": "Number of attempts to gather a picture from backend.", "default": 3}, "countdown_camera_capture_offset": {"type": "number", "multipleOf": 0.05, "maximum": 20.0, "minimum": 0.0, "title": "Countdown Camera Capture Offset", "description": "Trigger camera capture by offset earlier (in seconds). 0 trigger exactly when countdown is 0. Use to compensate for delay in camera processing for better UX.", "default": 0.2}, "index_backend_stills": {"type": "integer", "title": "Index Backend Stills", "description": "Index of one backend below to capture stills.", "default": 0}, "index_backend_video": {"type": "integer", "title": "Index Backend Video", "description": "Index of one backend below to capture live preview and video.", "default": 0}, "index_backend_multicam": {"type": "integer", "title": "Index Backend Multicam", "description": "Index of one backend below used for multicamera images (wigglegrams).", "default": 0}, "group_backends": {"items": {"$ref": "#/components/schemas/GroupBackend"}, "type": "array", "title": "Group Backends", "default": [{"enabled": true, "selected_device": "VirtualCamera", "virtualcamera": {"emulate_hires_static_still": false, "emulate_multicam_capture_devices": 4, "framerate": 15, "orientation": "1: 0\u00b0"}, "webcamcv2": {"CAM_RESOLUTION_HEIGHT": 10000, "CAM_RESOLUTION_WIDTH": 10000, "device_index": 0, "framerate": 15, "orientation": "1: 0\u00b0"}, "wigglecam": {"index_cam_stills": 0, "index_cam_video": 0, "keep_node_copy": false, "nodes": [{"base_url": "http://127.0.0.1:8010/", "description": "TestNode"}]}, "digicamcontrol": {"base_url": "http://127.0.0.1:5513", "orientation": "1: 0\u00b0"}}]}}, "type": "object", "title": "Camera Backend Config", "description": "Choose backends for still images/high quality images captured on main backend.\nIf the livepreview is enabled, the video is captured from live backend (if configured)\nor main backend."}, "GroupCommon": {"properties": {"admin_password": {"type": "string", "format": "password", "title": "Admin Password", "description": "Password to access the admin dashboard.", "default": "**********", "writeOnly": true}, "logging_level": {"type": "string", "enum": ["DEBUG", "INFO", "WARNING", "ERROR"], "title": "Logging Level", "description": "Log verbosity. File is writte to disc, and latest log is displayed also in UI.", "default": "DEBUG"}, "users_delete_to_recycle_dir": {"type": "boolean", "title": "Users Delete To Recycle Dir", "description": "If enabled, the captured files are moved to the recycle directory instead permanently deleted. Accidentally deleted images can be restored by the admin manually. Please inform users about the fact that no capture is deleted, if you enable the function!", "default": true}}, "type": "object", "title": "Common Config", "description": "Common config for photobooth."}, "GroupFileTransfer": {"properties": {"enabled": {"type": "boolean", "title": "Enabled", "description": "Enable the automatic file transfer to USB service. Files are copied when the USB drive is inserted.", "default": false}, "target_folder_name": {"type": "string", "title": "Target Folder Name", "description": "Name of the top-level folder on the USB drive where files will be copied to.", "default": "photobooth"}}, "type": "object", "title": "USB File Transfer Service Config", "description": "Configuration for USB File Transfer Service."}, "GroupHardwareInputOutput": {"properties": {"keyboard_input_enabled": {"type": "boolean", "title": "Keyboard Input Enabled", "description": "Enable keyboard input globally. Keyup is catched in browsers connected to the app.", "default": false}, "gpio_enabled": {"type": "boolean", "title": "Gpio Enabled", "description": "Enable Raspberry Pi GPIOzero integration.", "default": false}, "gpio_pin_shutdown": {"type": "integer", "title": "Gpio Pin Shutdown", "description": "GPIO pin to shutdown after holding it for 2 seconds.", "default": 17}, "gpio_pin_reboot": {"type": "integer", "title": "Gpio Pin Reboot", "description": "GPIO pin to reboot after holding it for 2 seconds.", "default": 18}}, "type": "object", "title": "Hardware Input/Output Config", "description": "Configure hardware GPIO, keyboard and more. Find integration information in the documentation."}, "GroupMediaprocessing": {"properties": {"HIRES_STILL_QUALITY": {"type": "integer", "maximum": 100.0, "minimum": 10.0, "title": "Hires Still Quality", "description": "Still JPEG full resolution quality, applied to download images and images with filter", "default": 90, "ui_component": "QSlider"}, "full_still_length": {"type": "integer", "maximum": 5000.0, "minimum": 800.0, "title": "Full Still Length", "description": "Dimension of longer side used for scaling full images. Shorter side of the image is calculated to keep aspect ratio. For performance choose as low as possible but still gives decent print quality. Example: 1500/6inch=250dpi", "default": 1500}, "preview_still_length": {"type": "integer", "maximum": 2500.0, "minimum": 200.0, "title": "Preview Still Length", "description": "Dimension of longer side used for scaling previews. Shorter side of the image is calculated to keep aspect ratio.", "default": 1200}, "thumbnail_still_length": {"type": "integer", "maximum": 1000.0, "minimum": 100.0, "title": "Thumbnail Still Length", "description": "Dimension of longer side used for scaling thumbnails. Shorter side of the image is calculated to keep aspect ratio.", "default": 400}, "video_bitrate": {"type": "integer", "maximum": 10000.0, "minimum": 1000.0, "title": "Video Bitrate", "description": "Video quality bitrate in k.", "default": 3000}, "video_compatibility_mode": {"type": "boolean", "title": "Video Compatibility Mode", "description": "Enable for improved video compatibility on iOS devices. Might reduce resulting quality slightly.", "default": false}, "removechromakey_enable": {"type": "boolean", "title": "Removechromakey Enable", "description": "Apply chromakey greenscreen removal from captured images", "default": false}, "removechromakey_keycolor": {"type": "integer", "maximum": 360.0, "minimum": 0.0, "title": "Removechromakey Keycolor", "description": "Color (H) in HSV colorspace to remove on 360\u00b0 scale.", "default": 110}, "removechromakey_tolerance": {"type": "integer", "maximum": 50.0, "minimum": 1.0, "title": "Removechromakey Tolerance", "description": "Tolerance for color (H) on chromakey color removal.", "default": 10}}, "type": "object", "title": "Process media after capture", "description": "Configure stages how to process images after capture."}, "GroupMisc": {"properties": {"secret_key": {"type": "string", "maxLength": 64, "minLength": 8, "title": "Secret Key", "description": "Secret to encrypt authentication data. If changed, login authorization is invalidated.", "default": "ThisIsTheDefaultSecret"}}, "type": "object", "title": "Miscellaneous Config", "description": "Quite advanced or experimental, usually not necessary to touch. Can change any time."}, "GroupQrShare": {"properties": {"enabled": {"type": "boolean", "title": "Enabled", "description": "Enable qr share service. To enable URL needs to be configured and dl.php script setup properly.", "default": false}, "shareservice_url": {"type": "string", "title": "Shareservice Url", "description": "URL of php script that is used to serve files and share via QR code. The default is a landingpage with further instructions how to setup.", "default": "https://photobooth-app.org/extras/shareservice-landing/"}, "shareservice_apikey": {"type": "string", "title": "Shareservice Apikey", "description": "Key to secure the download php script. Set the key in dl.php script to same value. Only if correct key is provided the shareservice works properly.", "default": "changedefault!"}, "share_custom_qr_url": {"type": "string", "title": "Share Custom Qr Url", "description": "URL displayed as QR code to image for download. Need you to sync the files on your own or allow the user to access via hotspot. {identifier} is replaced by the actual item's id, {filename} is replaced by the actual filename on the photobooth-data, in QR code.", "default": "http://localhost:8000/media/full/{identifier}"}}, "type": "object", "title": "QR code share", "description": "Settings about shareing media"}, "GroupShare": {"properties": {"sharing_enabled": {"type": "boolean", "title": "Sharing Enabled", "description": "Enable sharing service in general.", "default": true}, "number_direct_access_buttons": {"type": "integer", "maximum": 5.0, "minimum": 0.0, "title": "Number Direct Access Buttons", "description": "Number of buttons directly accessible in the gallery. Remaining items are available in the more-menu.", "default": 1}, "actions": {"items": {"$ref": "#/components/schemas/ShareConfigurationSet"}, "type": "array", "title": "Actions", "description": "Share or print mediaitems.", "default": [{"name": "default print settings", "handles_images_only": false, "processing": {"ask_user_for_parameter_input": false, "max_shares": 0, "parameters": [{"default": "1", "key": "copies", "label": "Copies", "ui_type": "int", "valid_max": "3", "valid_min": "1"}], "parameters_dialog_action_icon": "print", "parameters_dialog_action_label": "GO", "parameters_dialog_caption": "How many copies?", "share_blocked_time": 3, "share_command": "echo {filename} {copies}"}, "trigger": {"gpio_trigger": {"pin": "23", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "p"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "print", "show_button": true, "title": "Print", "use_custom_color": false}}}, {"name": "default print settings", "handles_images_only": true, "processing": {"ask_user_for_parameter_input": true, "max_shares": 0, "parameters": [{"default": "1", "key": "copies", "label": "Copies", "ui_type": "int", "valid_max": "3", "valid_min": "1"}, {"default": "me@mgineer85.de", "key": "mail", "label": "E-Mail address", "ui_type": "input", "valid_max": "128", "valid_min": "5"}], "parameters_dialog_action_icon": "mail", "parameters_dialog_action_label": "send", "parameters_dialog_caption": "Print and mail...", "share_blocked_time": 3, "share_command": "echo {filename} {copies} {mail}"}, "trigger": {"gpio_trigger": {"pin": "23", "trigger_on": "pressed"}, "keyboard_trigger": {"keycode": "p"}, "ui_trigger": {"custom_color": "#196cb0", "icon": "print", "show_button": true, "title": "Print", "use_custom_color": false}}}]}}, "type": "object", "title": "Define Share and Print Actions", "description": "Configure share or print actions."}, "GroupUiSettings": {"properties": {"PRIMARY_COLOR": {"type": "string", "format": "color", "title": "Primary Color", "description": "Primary color (e.g. buttons, title bar).", "default": "#196cb0"}, "SECONDARY_COLOR": {"type": "string", "format": "color", "title": "Secondary Color", "description": "Secondary color (admin interface, accents).", "default": "#b8124f"}, "theme": {"type": "string", "enum": ["system", "light", "dark"], "title": "Theme", "description": "Specify the theme for the app. Set to system for automatic switching based on system/browser settings or force the light/dark theme.", "default": "system"}, "show_gallery_on_frontpage": {"type": "boolean", "title": "Show Gallery On Frontpage", "description": "Show button to gallery on frontpage.", "default": true}, "show_admin_on_frontpage": {"type": "boolean", "title": "Show Admin On Frontpage", "description": "Show button to admin center, usually only during setup.", "default": true}, "admin_button_invisible": {"type": "boolean", "title": "Admin Button Invisible", "description": "If button is shown, it can still be rendered invisible. If enabled, the button is 100% transparent and 5 clicks each within 500ms are required to access the admin login.", "default": false}, "show_frontpage_timeout": {"type": "integer", "minimum": 1.0, "title": "Show Frontpage Timeout", "description": "Idle timeout in minutes after which the app switches to the frontpage again.", "default": 5}, "enable_automatic_slideshow": {"type": "boolean", "title": "Enable Automatic Slideshow", "description": "Enable a random slideshow after some time without any user interaction.", "default": true}, "show_automatic_slideshow_timeout": {"type": "integer", "minimum": 30.0, "title": "Show Automatic Slideshow Timeout", "description": "Timeout in seconds after which the slideshow starts.", "default": 300}, "enable_livestream_when_idle": {"type": "boolean", "title": "Enable Livestream When Idle", "description": "When idle, the cameras livestream is displayed permanently.", "default": true}, "enable_livestream_when_active": {"type": "boolean", "title": "Enable Livestream When Active", "description": "When countdown or capture is active, the cameras livestream is displayed.", "default": true}, "livestream_mirror_effect": {"type": "boolean", "title": "Livestream Mirror Effect", "description": "Flip livestream horizontally to create a mirror effect feeling more natural to users.", "default": true}, "livestream_blurredbackground": {"type": "boolean", "title": "Livestream Blurredbackground", "description": "Display the livestream blurred in the background of the actual livestream covering the full screen. This might look nice if the livestream resolution does not match the screen's aspect ratio. Check cpu usage on low power devices.", "default": false}, "enable_livestream_frameoverlay": {"type": "boolean", "title": "Enable Livestream Frameoverlay", "description": "Enable to overlay livestream_frameoverlay_image the livestream.", "default": true}, "livestream_frameoverlay_image": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Livestream Frameoverlay Image", "description": "When enabled, the frame is overlayed the livestream. This image is not used in the postprocessing. If mirroreffect is on, it will also be mirrored. Text in the frame appears in the wrong direction but the final image is correct.", "files_list_api": "/api/admin/files/search"}, "FRONTPAGE_TEXT": {"type": "string", "title": "Frontpage Text", "description": "Text/HTML displayed on frontpage.", "default": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Hey!<br>Let's take some pictures! <br>\ud83d\udcf7</div>"}, "TAKEPIC_MSG_TIME": {"type": "number", "title": "Takepic Msg Time", "description": "Offset in seconds, the smile-icon shall be shown.", "default": 0.5}, "TAKEPIC_MSG_TEXT": {"type": "string", "title": "Takepic Msg Text", "description": "Message to display at the end of the capture countdown.", "default": "\ud83d\ude03"}, "AUTOCLOSE_NEW_ITEM_ARRIVED": {"type": "integer", "title": "Autoclose New Item Arrived", "description": "Timeout in seconds a new item popup closes automatically.", "default": 30}, "GALLERY_EMPTY_MSG": {"type": "string", "title": "Gallery Empty Msg", "description": "Message displayed if gallery is empty.", "default": "<div class=\"fixed-center text-h2 text-weight-bold text-center text-white\" style=\"text-shadow: 4px 4px 4px #666;\">Empty, Zero, Nada! \ud83e\udd37\u200d\u2642\ufe0f<br>Let's take some pictures! <br>\ud83d\udcf7\ud83d\udc95</div>"}, "gallery_show_qrcode": {"type": "boolean", "title": "Gallery Show Qrcode", "description": "Show QR code in gallery. If shareservice is enabled the URL is automatically generated, if not go to share config and provide URL.", "default": true}, "qrcode_text_above": {"type": "string", "title": "Qrcode Text Above", "description": "Display text above the QR code.", "default": "\ud83d\udc4b Download your photo!"}, "qrcode_text_below": {"type": "string", "title": "Qrcode Text Below", "description": "Display text below the QR code.", "default": "Scan above code with your phone."}, "gallery_show_filter": {"type": "boolean", "title": "Gallery Show Filter", "description": "Show filter provided by plugins. Pilgram2 filter are included in the app. See documentation to extend and build your own plugin.", "default": true}, "gallery_show_download": {"type": "boolean", "title": "Gallery Show Download", "description": "Show a download button in gallery.", "default": true}, "gallery_show_delete": {"type": "boolean", "title": "Gallery Show Delete", "description": "Show a delete button in gallery.", "default": true}, "gallery_show_shareprint": {"type": "boolean", "title": "Gallery Show Shareprint", "description": "Show the share/print buttons in gallery.", "default": true}}, "type": "object", "title": "Personalize the User Interface", "description": "Personalize the booth's UI."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "KeyboardTrigger": {"properties": {"keycode": {"type": "string", "title": "Keycode", "description": "Define keyboard keys to trigger actions.", "default": ""}}, "type": "object", "title": "Keyboard triggers configuration", "description": "Configure trigger the user can interact with. Sources are GPIO and keyboard."}, "MediaitemPublic": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "media_type": {"$ref": "#/components/schemas/MediaitemTypes"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "unprocessed": {"type": "string", "format": "path", "title": "Unprocessed"}, "processed": {"type": "string", "format": "path", "title": "Processed"}, "show_in_gallery": {"type": "boolean", "title": "Show In Gallery"}}, "type": "object", "required": ["id", "media_type", "created_at", "updated_at", "unprocessed", "processed", "show_in_gallery"], "title": "MediaitemPublic"}, "MediaitemTypes": {"type": "string", "enum": ["image", "collage", "animation", "video", "multicamera"], "title": "MediaitemTypes", "description": "SQLalchemy persists the name, fastapi validates against the value.\nWe just set name==value so it works in both worlds without any conversion.\nRef: https://github.com/fastapi/fastapi/discussions/11098"}, "MultiImageJobControl": {"properties": {"countdown_capture": {"type": "number", "multipleOf": 0.1, "maximum": 20.0, "minimum": 0.0, "title": "Countdown Capture", "description": "Countdown in seconds, when user starts a capture process", "default": 2.0}, "countdown_capture_second_following": {"type": "number", "multipleOf": 0.1, "maximum": 20.0, "minimum": 0.0, "title": "Countdown Capture Second Following", "description": "Countdown in seconds, used for second and following captures for collages", "default": 1.0}, "ask_approval_each_capture": {"type": "boolean", "title": "Ask Approval Each Capture", "description": "Stop after every capture to ask user if he would like to continue or redo the capture. If disabled captures are granted as approved always.", "default": false}, "approve_autoconfirm_timeout": {"type": "number", "title": "Approve Autoconfirm Timeout", "description": "If user is required to approve collage captures, after this timeout, the job continues and user confirmation is assumed.", "default": 15.0}, "show_individual_captures_in_gallery": {"type": "boolean", "title": "Show Individual Captures In Gallery", "description": "Show individual captures in the gallery. Hidden captures are still stored in the data folder. (Note: changing this setting will not change visibility of already captured images).", "default": false}}, "type": "object", "title": "Job control for multiple captures", "description": "Configure job control affecting the procedure."}, "MulticameraConfigurationSet": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name to identify, only used for display in admin center.", "default": "default action"}, "jobcontrol": {"$ref": "#/components/schemas/MulticameraJobControl"}, "processing": {"$ref": "#/components/schemas/MulticameraProcessing"}, "trigger": {"$ref": "#/components/schemas/Trigger"}}, "type": "object", "required": ["jobcontrol", "processing", "trigger"], "title": "Postprocess multicamera captures", "description": "Configure stages how to process images after capture."}, "MulticameraJobControl": {"properties": {"countdown_capture": {"type": "number", "multipleOf": 0.1, "maximum": 20.0, "minimum": 0.0, "title": "Countdown Capture", "description": "Countdown in seconds, when user starts a capture process.", "default": 2.0}, "show_individual_captures_in_gallery": {"type": "boolean", "title": "Show Individual Captures In Gallery", "description": "Show individual captures in the gallery. Hidden captures are still stored in the data folder. (Note: changing this setting will not change visibility of already captured images).", "default": false}}, "type": "object", "title": "Job control for wigglegram-multicamera captures", "description": "Configure job control affecting the procedure."}, "MulticameraProcessing": {"properties": {"canvas_width": {"type": "integer", "title": "Canvas Width", "description": "Width (X) in pixel of animation image (GIF). The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 1500}, "canvas_height": {"type": "integer", "title": "Canvas Height", "description": "Height (Y) in pixel of animation image (GIF). The higher the better the quality but also longer time to process. All processes keep aspect ratio.", "default": 900}, "duration": {"type": "integer", "minimum": 0.0, "title": "Duration", "description": "Duration of each frame in milliseconds. Wigglegrams look good usually between 100-200ms duration.", "default": 125}, "image_filter": {"$ref": "#/components/schemas/PluginFilters", "default": "original"}}, "type": "object", "title": "Wigglegram-multicamera processing", "description": "Configure stages how to process collage after capture."}, "PathListItem": {"properties": {"name": {"type": "string", "title": "Name"}, "filepath": {"type": "string", "title": "Filepath"}, "is_dir": {"type": "boolean", "title": "Is Dir"}, "size": {"type": "integer", "title": "Size"}}, "type": "object", "required": ["name", "filepath", "is_dir", "size"], "title": "PathListItem"}, "PluginFilters": {"type": "string", "enum": ["original", "FilterPilgram2._1977", "FilterPilgram2.aden", "FilterPilgram2.amaro", "FilterPilgram2.ashby", "FilterPilgram2.brannan", "FilterPilgram2.brooklyn", "FilterPilgram2.charmes", "FilterPilgram2.clarendon", "FilterPilgram2.crema", "FilterPilgram2.dogpatch", "FilterPilgram2.earlybird", "FilterPilgram2.gingham", "FilterPilgram2.ginza", "FilterPilgram2.hefe", "FilterPilgram2.helena", "FilterPilgram2.hudson", "FilterPilgram2.inkwell", "FilterPilgram2.juno", "FilterPilgram2.kelvin", "FilterPilgram2.lark", "FilterPilgram2.lofi", "FilterPilgram2.ludwig", "FilterPilgram2.maven", "FilterPilgram2.mayfair", "FilterPilgram2.moon", "FilterPilgram2.nashville", "FilterPilgram2.perpetua", "FilterPilgram2.poprocket", "FilterPilgram2.reyes", "FilterPilgram2.rise", "FilterPilgram2.sierra", "FilterPilgram2.skyline", "FilterPilgram2.slumber", "FilterPilgram2.stinson", "FilterPilgram2.sutro", "FilterPilgram2.toaster", "FilterPilgram2.valencia", "FilterPilgram2.walden", "FilterPilgram2.willow", "FilterPilgram2.xpro2"], "title": "PluginFilters"}, "ShareConfigurationSet": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name to identify, only used for display in admin center.", "default": "default print settings"}, "handles_images_only": {"type": "boolean", "title": "Handles Images Only", "description": "Enable if this share type can handle only still images.", "default": true}, "processing": {"$ref": "#/components/schemas/ShareProcessing"}, "trigger": {"$ref": "#/components/schemas/Trigger"}}, "type": "object", "required": ["processing", "trigger"], "title": "Process mediaitem before printing on paper", "description": "Configure stages how to process mediaitem before printing on paper."}, "ShareProcessing": {"properties": {"share_command": {"type": "string", "title": "Share Command", "description": "Command issued to share/print. Use {filename} as placeholder for the mediaitem to be shared/printed.", "default": "echo {filename}"}, "ask_user_for_parameter_input": {"type": "boolean", "title": "Ask User For Parameter Input", "description": "If enabled, when the share button is activated, a dialog pops up to input below configured parameters.", "default": false}, "parameters_dialog_caption": {"type": "string", "title": "Parameters Dialog Caption", "description": "Caption of the dialog popup displaying the parameters.", "default": "Make your choice!"}, "parameters_dialog_action_icon": {"type": "string", "title": "Parameters Dialog Action Icon", "description": "Icon used for the action button (any icon from material icons, see documentation).", "default": "print"}, "parameters_dialog_action_label": {"type": "string", "title": "Parameters Dialog Action Label", "description": "Text used for the action button as label.", "default": "GO"}, "parameters": {"items": {"$ref": "#/components/schemas/ShareProcessingParameters"}, "type": "array", "title": "Parameters", "description": "Define input fields the user needs to enter on share.", "default": []}, "share_blocked_time": {"type": "integer", "title": "Share Blocked Time", "description": "Block queue print until time is passed. Time in seconds."}, "max_shares": {"type": "integer", "minimum": 0.0, "title": "Max Shares", "description": "Limit max shares (0 = no limit).", "default": 0}}, "type": "object", "required": ["share_blocked_time"], "title": "Share/Print Actions", "description": "Configure options to share or print images."}, "ShareProcessingParameters": {"properties": {"key": {"type": "string", "minLength": 4, "pattern": "^[a-zA-Z0-9]+$", "title": "Key", "description": "Define the parameter key that is replaced in the command. Example: Set to 'copies' to replace {copies} in the command by the value.", "default": "copies"}, "label": {"type": "string", "title": "Label", "description": "Label the field, displayed to the user.", "default": "Copies"}, "ui_type": {"type": "string", "enum": ["input", "int"], "title": "Ui Type", "description": "Display type of the parameter in the UI. 'int' displays \u2795\u2796 buttons in the UI. 'input' displays an input box. This affects only the UI, all parameter are interpreted as strings.", "default": "int"}, "default": {"type": "string", "title": "Default", "description": "Default value if the user does not change it.", "default": "1"}, "valid_min": {"type": "string", "title": "Valid Min", "default": "1"}, "valid_max": {"type": "string", "title": "Valid Max", "default": "3"}}, "type": "object", "title": "Additional parameters", "description": "Configure additional parameter for the share command to input by the user."}, "SingleImageConfigurationSet": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name to identify, only used for display in admin center.", "default": "default action"}, "jobcontrol": {"$ref": "#/components/schemas/SingleImageJobControl"}, "processing": {"$ref": "#/components/schemas/SingleImageProcessing"}, "trigger": {"$ref": "#/components/schemas/Trigger"}}, "type": "object", "required": ["jobcontrol", "processing", "trigger"], "title": "Postprocess single captures", "description": "Configure stages how to process images after capture."}, "SingleImageJobControl": {"properties": {"countdown_capture": {"type": "number", "multipleOf": 0.1, "maximum": 20.0, "minimum": 0.0, "title": "Countdown Capture", "description": "Countdown in seconds, when user starts a capture process.", "default": 2.0}}, "type": "object", "title": "Job control for single captures", "description": "Configure job control affecting the procedure."}, "SingleImageProcessing": {"properties": {"image_filter": {"$ref": "#/components/schemas/PluginFilters", "default": "original"}, "fill_background_enable": {"type": "boolean", "title": "Fill Background Enable", "description": "Apply solid color background to captured image (useful only if image is extended or background removed)", "default": false}, "fill_background_color": {"type": "string", "format": "color", "title": "Fill Background Color", "description": "Solid color used to fill background.", "default": "blue"}, "img_background_enable": {"type": "boolean", "title": "Img Background Enable", "description": "Add image from file to background (useful only if image is extended or background removed)", "default": false}, "img_background_file": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Img Background File", "description": "Image file to use as background filling transparent area. File needs to be located in working directory/userdata/*", "files_list_api": "/api/admin/files/search"}, "img_frame_enable": {"type": "boolean", "title": "Img Frame Enable", "description": "Mount captured image to frame.", "default": false}, "img_frame_file": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Img Frame File", "description": "Image file to which the captured image is mounted to. Frame determines the output image size! Photos are visible through transparant parts. Image needs to be transparent (PNG). File needs to be located in userdata/*", "files_list_api": "/api/admin/files/search"}, "texts_enable": {"type": "boolean", "title": "Texts Enable", "description": "General enable apply texts below.", "default": false}, "texts": {"items": {"$ref": "#/components/schemas/TextsConfig"}, "type": "array", "title": "Texts", "description": "Text to overlay on images after capture. Pos_x/Pos_y measure in pixel starting 0/0 at top-left in image. Font to use in text stages. File needs to be located in working directory/userdata/*", "default": []}}, "type": "object", "title": "Single captures processing after capture", "description": "Configure stages how to process images after capture."}, "TextsConfig": {"properties": {"text": {"type": "string", "title": "Text", "default": ""}, "pos_x": {"type": "integer", "minimum": 0.0, "title": "Pos X", "default": 50}, "pos_y": {"type": "integer", "minimum": 0.0, "title": "Pos Y", "default": 50}, "rotate": {"type": "integer", "title": "Rotate", "default": 0}, "font_size": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Font Size", "default": 40}, "font": {"anyOf": [{"type": "string", "format": "file-path"}, {"type": "null"}], "title": "Font", "files_list_api": "/api/admin/files/search"}, "color": {"type": "string", "format": "color", "title": "Color", "default": "red"}}, "type": "object", "title": "TextsConfig"}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type"}}, "type": "object", "required": ["access_token", "token_type"], "title": "Token"}, "Trigger": {"properties": {"ui_trigger": {"$ref": "#/components/schemas/UiTrigger", "default": {"show_button": true, "title": "", "icon": "", "use_custom_color": false, "custom_color": "#196cb0"}}, "keyboard_trigger": {"$ref": "#/components/schemas/KeyboardTrigger", "default": {"keycode": ""}}, "gpio_trigger": {"$ref": "#/components/schemas/GpioTrigger", "default": {"pin": "", "trigger_on": "pressed"}}}, "type": "object", "title": "Trigger configuration", "description": "Configure trigger the user can interact with. Sources are GPIO and keyboard."}, "UiTrigger": {"properties": {"show_button": {"type": "boolean", "title": "Show Button", "description": "Show the button to trigger the process.", "default": true}, "title": {"type": "string", "title": "Title", "description": "Label used for the button.", "default": ""}, "icon": {"type": "string", "title": "Icon", "description": "Icon used for the button (any icon from material icons, see documentation).", "default": ""}, "use_custom_color": {"type": "boolean", "title": "Use Custom Color", "description": "Use custom color for button.", "default": false}, "custom_color": {"type": "string", "format": "color", "title": "Custom Color", "description": "Custom color for the button.", "default": "#196cb0"}}, "type": "object", "title": "UI button configuration", "description": "UI trigger configuration."}, "User": {"properties": {"username": {"type": "string", "title": "Username"}, "full_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Full Name"}}, "type": "object", "required": ["username"], "title": "User"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "VideoConfigurationSet": {"properties": {"name": {"type": "string", "title": "Name", "description": "Name to identify, only used for display in admin center.", "default": "default action"}, "jobcontrol": {"$ref": "#/components/schemas/VideoJobControl"}, "processing": {"$ref": "#/components/schemas/VideoProcessing"}, "trigger": {"$ref": "#/components/schemas/Trigger"}}, "type": "object", "required": ["jobcontrol", "processing", "trigger"], "title": "Postprocess video captures", "description": "Configure stages how to process images after capture."}, "VideoJobControl": {"properties": {"countdown_capture": {"type": "number", "multipleOf": 0.1, "maximum": 20.0, "minimum": 0.0, "title": "Countdown Capture", "description": "Countdown in seconds, when user starts a capture process.", "default": 2.0}}, "type": "object", "title": "Job control for video captures", "description": "Configure job control affecting the procedure."}, "VideoProcessing": {"properties": {"video_duration": {"type": "integer", "title": "Video Duration", "description": "Maximum duration of the video. Users can stop earlier or capture is automatically stopped after set time.", "default": 5}, "boomerang": {"type": "boolean", "title": "Boomerang", "description": "Create boomerang videos, the video is replayed reverse automatically.", "default": false}, "video_framerate": {"type": "integer", "maximum": 30.0, "minimum": 1.0, "title": "Video Framerate", "description": "Video framerate (frames per second).", "default": 25}}, "type": "object", "title": "Video Processing", "description": "Configure stages how to process collage after capture."}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/admin/auth/token"}}}}}}